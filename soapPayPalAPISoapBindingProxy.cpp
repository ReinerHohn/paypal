/* soapPayPalAPISoapBindingProxy.cpp
   Generated by gSOAP 2.8.54 for paypal.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapPayPalAPISoapBindingProxy.h"

PayPalAPISoapBindingProxy::PayPalAPISoapBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	PayPalAPISoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PayPalAPISoapBindingProxy::PayPalAPISoapBindingProxy(const PayPalAPISoapBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

PayPalAPISoapBindingProxy::PayPalAPISoapBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	PayPalAPISoapBindingProxy_init(_soap->imode, _soap->omode);
}

PayPalAPISoapBindingProxy::PayPalAPISoapBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	PayPalAPISoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

PayPalAPISoapBindingProxy::PayPalAPISoapBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PayPalAPISoapBindingProxy_init(iomode, iomode);
}

PayPalAPISoapBindingProxy::PayPalAPISoapBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PayPalAPISoapBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

PayPalAPISoapBindingProxy::PayPalAPISoapBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	PayPalAPISoapBindingProxy_init(imode, omode);
}

PayPalAPISoapBindingProxy::~PayPalAPISoapBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void PayPalAPISoapBindingProxy::PayPalAPISoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
        {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns2", "urn:ebay:apis:CoreComponentTypes", NULL, NULL},
        {"ns4", "urn:ebay:apis:EnhancedDataTypes", NULL, NULL},
        {"ns3", "urn:ebay:apis:eBLBaseComponents", NULL, NULL},
        {"ns1", "urn:ebay:api:PayPalAPI", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

PayPalAPISoapBindingProxy *PayPalAPISoapBindingProxy::copy()
{	PayPalAPISoapBindingProxy *dup = SOAP_NEW_COPY(PayPalAPISoapBindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}

PayPalAPISoapBindingProxy& PayPalAPISoapBindingProxy::operator=(const PayPalAPISoapBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void PayPalAPISoapBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void PayPalAPISoapBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	PayPalAPISoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void PayPalAPISoapBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void PayPalAPISoapBindingProxy::soap_header(ns3__CustomSecurityHeaderType *ns1__RequesterCredentials)
{	::soap_header(this->soap);
	this->soap->header->ns1__RequesterCredentials = ns1__RequesterCredentials;
}

::SOAP_ENV__Header *PayPalAPISoapBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *PayPalAPISoapBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *PayPalAPISoapBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *PayPalAPISoapBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int PayPalAPISoapBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int PayPalAPISoapBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void PayPalAPISoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PayPalAPISoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *PayPalAPISoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int PayPalAPISoapBindingProxy::RefundTransaction(const char *endpoint, const char *soap_action, _ns1__RefundTransactionReq *ns1__RefundTransactionReq, ns1__RefundTransactionResponseType &ns1__RefundTransactionResponse)
{	struct soap *soap = this->soap;
	struct __ns1__RefundTransaction soap_tmp___ns1__RefundTransaction;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__RefundTransaction.ns1__RefundTransactionReq = ns1__RefundTransactionReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__RefundTransaction(soap, &soap_tmp___ns1__RefundTransaction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RefundTransaction(soap, &soap_tmp___ns1__RefundTransaction, "-ns1:RefundTransaction", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RefundTransaction(soap, &soap_tmp___ns1__RefundTransaction, "-ns1:RefundTransaction", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__RefundTransactionResponseType*>(&ns1__RefundTransactionResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__RefundTransactionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RefundTransactionResponse.soap_get(soap, "ns1:RefundTransactionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::InitiateRecoup(const char *endpoint, const char *soap_action, _ns1__InitiateRecoupReq *ns1__InitiateRecoupReq, ns1__InitiateRecoupResponseType &ns1__InitiateRecoupResponse)
{	struct soap *soap = this->soap;
	struct __ns1__InitiateRecoup soap_tmp___ns1__InitiateRecoup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__InitiateRecoup.ns1__InitiateRecoupReq = ns1__InitiateRecoupReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__InitiateRecoup(soap, &soap_tmp___ns1__InitiateRecoup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InitiateRecoup(soap, &soap_tmp___ns1__InitiateRecoup, "-ns1:InitiateRecoup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InitiateRecoup(soap, &soap_tmp___ns1__InitiateRecoup, "-ns1:InitiateRecoup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__InitiateRecoupResponseType*>(&ns1__InitiateRecoupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__InitiateRecoupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InitiateRecoupResponse.soap_get(soap, "ns1:InitiateRecoupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::CompleteRecoup(const char *endpoint, const char *soap_action, _ns1__CompleteRecoupReq *ns1__CompleteRecoupReq, ns1__CompleteRecoupResponseType &ns1__CompleteRecoupResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CompleteRecoup soap_tmp___ns1__CompleteRecoup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__CompleteRecoup.ns1__CompleteRecoupReq = ns1__CompleteRecoupReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CompleteRecoup(soap, &soap_tmp___ns1__CompleteRecoup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CompleteRecoup(soap, &soap_tmp___ns1__CompleteRecoup, "-ns1:CompleteRecoup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CompleteRecoup(soap, &soap_tmp___ns1__CompleteRecoup, "-ns1:CompleteRecoup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__CompleteRecoupResponseType*>(&ns1__CompleteRecoupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CompleteRecoupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CompleteRecoupResponse.soap_get(soap, "ns1:CompleteRecoupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::CancelRecoup(const char *endpoint, const char *soap_action, _ns1__CancelRecoupReq *ns1__CancelRecoupReq, ns1__CancelRecoupResponseType &ns1__CancelRecoupResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CancelRecoup soap_tmp___ns1__CancelRecoup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__CancelRecoup.ns1__CancelRecoupReq = ns1__CancelRecoupReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CancelRecoup(soap, &soap_tmp___ns1__CancelRecoup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CancelRecoup(soap, &soap_tmp___ns1__CancelRecoup, "-ns1:CancelRecoup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CancelRecoup(soap, &soap_tmp___ns1__CancelRecoup, "-ns1:CancelRecoup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__CancelRecoupResponseType*>(&ns1__CancelRecoupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CancelRecoupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CancelRecoupResponse.soap_get(soap, "ns1:CancelRecoupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetTransactionDetails(const char *endpoint, const char *soap_action, _ns1__GetTransactionDetailsReq *ns1__GetTransactionDetailsReq, ns1__GetTransactionDetailsResponseType &ns1__GetTransactionDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetTransactionDetails soap_tmp___ns1__GetTransactionDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetTransactionDetails.ns1__GetTransactionDetailsReq = ns1__GetTransactionDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTransactionDetails(soap, &soap_tmp___ns1__GetTransactionDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTransactionDetails(soap, &soap_tmp___ns1__GetTransactionDetails, "-ns1:GetTransactionDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTransactionDetails(soap, &soap_tmp___ns1__GetTransactionDetails, "-ns1:GetTransactionDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetTransactionDetailsResponseType*>(&ns1__GetTransactionDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetTransactionDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTransactionDetailsResponse.soap_get(soap, "ns1:GetTransactionDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BMCreateButton(const char *endpoint, const char *soap_action, _ns1__BMCreateButtonReq *ns1__BMCreateButtonReq, ns1__BMCreateButtonResponseType &ns1__BMCreateButtonResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BMCreateButton soap_tmp___ns1__BMCreateButton;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BMCreateButton.ns1__BMCreateButtonReq = ns1__BMCreateButtonReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BMCreateButton(soap, &soap_tmp___ns1__BMCreateButton);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BMCreateButton(soap, &soap_tmp___ns1__BMCreateButton, "-ns1:BMCreateButton", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BMCreateButton(soap, &soap_tmp___ns1__BMCreateButton, "-ns1:BMCreateButton", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BMCreateButtonResponseType*>(&ns1__BMCreateButtonResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BMCreateButtonResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BMCreateButtonResponse.soap_get(soap, "ns1:BMCreateButtonResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BMUpdateButton(const char *endpoint, const char *soap_action, _ns1__BMUpdateButtonReq *ns1__BMUpdateButtonReq, ns1__BMUpdateButtonResponseType &ns1__BMUpdateButtonResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BMUpdateButton soap_tmp___ns1__BMUpdateButton;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BMUpdateButton.ns1__BMUpdateButtonReq = ns1__BMUpdateButtonReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BMUpdateButton(soap, &soap_tmp___ns1__BMUpdateButton);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BMUpdateButton(soap, &soap_tmp___ns1__BMUpdateButton, "-ns1:BMUpdateButton", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BMUpdateButton(soap, &soap_tmp___ns1__BMUpdateButton, "-ns1:BMUpdateButton", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BMUpdateButtonResponseType*>(&ns1__BMUpdateButtonResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BMUpdateButtonResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BMUpdateButtonResponse.soap_get(soap, "ns1:BMUpdateButtonResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BMSetInventory(const char *endpoint, const char *soap_action, _ns1__BMSetInventoryReq *ns1__BMSetInventoryReq, ns1__BMSetInventoryResponseType &ns1__BMSetInventoryResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BMSetInventory soap_tmp___ns1__BMSetInventory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BMSetInventory.ns1__BMSetInventoryReq = ns1__BMSetInventoryReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BMSetInventory(soap, &soap_tmp___ns1__BMSetInventory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BMSetInventory(soap, &soap_tmp___ns1__BMSetInventory, "-ns1:BMSetInventory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BMSetInventory(soap, &soap_tmp___ns1__BMSetInventory, "-ns1:BMSetInventory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BMSetInventoryResponseType*>(&ns1__BMSetInventoryResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BMSetInventoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BMSetInventoryResponse.soap_get(soap, "ns1:BMSetInventoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BMGetButtonDetails(const char *endpoint, const char *soap_action, _ns1__BMGetButtonDetailsReq *ns1__BMGetButtonDetailsReq, ns1__BMGetButtonDetailsResponseType &ns1__BMGetButtonDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BMGetButtonDetails soap_tmp___ns1__BMGetButtonDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BMGetButtonDetails.ns1__BMGetButtonDetailsReq = ns1__BMGetButtonDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BMGetButtonDetails(soap, &soap_tmp___ns1__BMGetButtonDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BMGetButtonDetails(soap, &soap_tmp___ns1__BMGetButtonDetails, "-ns1:BMGetButtonDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BMGetButtonDetails(soap, &soap_tmp___ns1__BMGetButtonDetails, "-ns1:BMGetButtonDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BMGetButtonDetailsResponseType*>(&ns1__BMGetButtonDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BMGetButtonDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BMGetButtonDetailsResponse.soap_get(soap, "ns1:BMGetButtonDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BMGetInventory(const char *endpoint, const char *soap_action, _ns1__BMGetInventoryReq *ns1__BMGetInventoryReq, ns1__BMGetInventoryResponseType &ns1__BMGetInventoryResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BMGetInventory soap_tmp___ns1__BMGetInventory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BMGetInventory.ns1__BMGetInventoryReq = ns1__BMGetInventoryReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BMGetInventory(soap, &soap_tmp___ns1__BMGetInventory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BMGetInventory(soap, &soap_tmp___ns1__BMGetInventory, "-ns1:BMGetInventory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BMGetInventory(soap, &soap_tmp___ns1__BMGetInventory, "-ns1:BMGetInventory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BMGetInventoryResponseType*>(&ns1__BMGetInventoryResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BMGetInventoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BMGetInventoryResponse.soap_get(soap, "ns1:BMGetInventoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BMManageButtonStatus(const char *endpoint, const char *soap_action, _ns1__BMManageButtonStatusReq *ns1__BMManageButtonStatusReq, ns1__BMManageButtonStatusResponseType &ns1__BMManageButtonStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BMManageButtonStatus soap_tmp___ns1__BMManageButtonStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BMManageButtonStatus.ns1__BMManageButtonStatusReq = ns1__BMManageButtonStatusReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BMManageButtonStatus(soap, &soap_tmp___ns1__BMManageButtonStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BMManageButtonStatus(soap, &soap_tmp___ns1__BMManageButtonStatus, "-ns1:BMManageButtonStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BMManageButtonStatus(soap, &soap_tmp___ns1__BMManageButtonStatus, "-ns1:BMManageButtonStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BMManageButtonStatusResponseType*>(&ns1__BMManageButtonStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BMManageButtonStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BMManageButtonStatusResponse.soap_get(soap, "ns1:BMManageButtonStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BMButtonSearch(const char *endpoint, const char *soap_action, _ns1__BMButtonSearchReq *ns1__BMButtonSearchReq, ns1__BMButtonSearchResponseType &ns1__BMButtonSearchResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BMButtonSearch soap_tmp___ns1__BMButtonSearch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BMButtonSearch.ns1__BMButtonSearchReq = ns1__BMButtonSearchReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BMButtonSearch(soap, &soap_tmp___ns1__BMButtonSearch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BMButtonSearch(soap, &soap_tmp___ns1__BMButtonSearch, "-ns1:BMButtonSearch", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BMButtonSearch(soap, &soap_tmp___ns1__BMButtonSearch, "-ns1:BMButtonSearch", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BMButtonSearchResponseType*>(&ns1__BMButtonSearchResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BMButtonSearchResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BMButtonSearchResponse.soap_get(soap, "ns1:BMButtonSearchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BillUser(const char *endpoint, const char *soap_action, _ns1__BillUserReq *ns1__BillUserReq, ns1__BillUserResponseType &ns1__BillUserResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BillUser soap_tmp___ns1__BillUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BillUser.ns1__BillUserReq = ns1__BillUserReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BillUser(soap, &soap_tmp___ns1__BillUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BillUser(soap, &soap_tmp___ns1__BillUser, "-ns1:BillUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BillUser(soap, &soap_tmp___ns1__BillUser, "-ns1:BillUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BillUserResponseType*>(&ns1__BillUserResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BillUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BillUserResponse.soap_get(soap, "ns1:BillUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::TransactionSearch(const char *endpoint, const char *soap_action, _ns1__TransactionSearchReq *ns1__TransactionSearchReq, ns1__TransactionSearchResponseType &ns1__TransactionSearchResponse)
{	struct soap *soap = this->soap;
	struct __ns1__TransactionSearch soap_tmp___ns1__TransactionSearch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__TransactionSearch.ns1__TransactionSearchReq = ns1__TransactionSearchReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__TransactionSearch(soap, &soap_tmp___ns1__TransactionSearch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TransactionSearch(soap, &soap_tmp___ns1__TransactionSearch, "-ns1:TransactionSearch", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TransactionSearch(soap, &soap_tmp___ns1__TransactionSearch, "-ns1:TransactionSearch", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__TransactionSearchResponseType*>(&ns1__TransactionSearchResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__TransactionSearchResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TransactionSearchResponse.soap_get(soap, "ns1:TransactionSearchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::MassPay(const char *endpoint, const char *soap_action, _ns1__MassPayReq *ns1__MassPayReq, ns1__MassPayResponseType &ns1__MassPayResponse)
{	struct soap *soap = this->soap;
	struct __ns1__MassPay soap_tmp___ns1__MassPay;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__MassPay.ns1__MassPayReq = ns1__MassPayReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__MassPay(soap, &soap_tmp___ns1__MassPay);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MassPay(soap, &soap_tmp___ns1__MassPay, "-ns1:MassPay", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MassPay(soap, &soap_tmp___ns1__MassPay, "-ns1:MassPay", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__MassPayResponseType*>(&ns1__MassPayResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__MassPayResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MassPayResponse.soap_get(soap, "ns1:MassPayResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BillAgreementUpdate(const char *endpoint, const char *soap_action, _ns1__BillAgreementUpdateReq *ns1__BillAgreementUpdateReq, ns1__BAUpdateResponseType &ns1__BAUpdateResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BillAgreementUpdate soap_tmp___ns1__BillAgreementUpdate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BillAgreementUpdate.ns1__BillAgreementUpdateReq = ns1__BillAgreementUpdateReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BillAgreementUpdate(soap, &soap_tmp___ns1__BillAgreementUpdate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BillAgreementUpdate(soap, &soap_tmp___ns1__BillAgreementUpdate, "-ns1:BillAgreementUpdate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BillAgreementUpdate(soap, &soap_tmp___ns1__BillAgreementUpdate, "-ns1:BillAgreementUpdate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BAUpdateResponseType*>(&ns1__BAUpdateResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BAUpdateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BAUpdateResponse.soap_get(soap, "ns1:BAUpdateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::AddressVerify(const char *endpoint, const char *soap_action, _ns1__AddressVerifyReq *ns1__AddressVerifyReq, ns1__AddressVerifyResponseType &ns1__AddressVerifyResponse)
{	struct soap *soap = this->soap;
	struct __ns1__AddressVerify soap_tmp___ns1__AddressVerify;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__AddressVerify.ns1__AddressVerifyReq = ns1__AddressVerifyReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddressVerify(soap, &soap_tmp___ns1__AddressVerify);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddressVerify(soap, &soap_tmp___ns1__AddressVerify, "-ns1:AddressVerify", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddressVerify(soap, &soap_tmp___ns1__AddressVerify, "-ns1:AddressVerify", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__AddressVerifyResponseType*>(&ns1__AddressVerifyResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__AddressVerifyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddressVerifyResponse.soap_get(soap, "ns1:AddressVerifyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::EnterBoarding(const char *endpoint, const char *soap_action, _ns1__EnterBoardingReq *ns1__EnterBoardingReq, ns1__EnterBoardingResponseType &ns1__EnterBoardingResponse)
{	struct soap *soap = this->soap;
	struct __ns1__EnterBoarding soap_tmp___ns1__EnterBoarding;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__EnterBoarding.ns1__EnterBoardingReq = ns1__EnterBoardingReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__EnterBoarding(soap, &soap_tmp___ns1__EnterBoarding);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EnterBoarding(soap, &soap_tmp___ns1__EnterBoarding, "-ns1:EnterBoarding", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EnterBoarding(soap, &soap_tmp___ns1__EnterBoarding, "-ns1:EnterBoarding", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__EnterBoardingResponseType*>(&ns1__EnterBoardingResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__EnterBoardingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EnterBoardingResponse.soap_get(soap, "ns1:EnterBoardingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetBoardingDetails(const char *endpoint, const char *soap_action, _ns1__GetBoardingDetailsReq *ns1__GetBoardingDetailsReq, ns1__GetBoardingDetailsResponseType &ns1__GetBoardingDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetBoardingDetails soap_tmp___ns1__GetBoardingDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetBoardingDetails.ns1__GetBoardingDetailsReq = ns1__GetBoardingDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBoardingDetails(soap, &soap_tmp___ns1__GetBoardingDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBoardingDetails(soap, &soap_tmp___ns1__GetBoardingDetails, "-ns1:GetBoardingDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBoardingDetails(soap, &soap_tmp___ns1__GetBoardingDetails, "-ns1:GetBoardingDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetBoardingDetailsResponseType*>(&ns1__GetBoardingDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetBoardingDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBoardingDetailsResponse.soap_get(soap, "ns1:GetBoardingDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::CreateMobilePayment(const char *endpoint, const char *soap_action, _ns1__CreateMobilePaymentReq *ns1__CreateMobilePaymentReq, ns1__CreateMobilePaymentResponseType &ns1__CreateMobilePaymentResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateMobilePayment soap_tmp___ns1__CreateMobilePayment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__CreateMobilePayment.ns1__CreateMobilePaymentReq = ns1__CreateMobilePaymentReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateMobilePayment(soap, &soap_tmp___ns1__CreateMobilePayment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateMobilePayment(soap, &soap_tmp___ns1__CreateMobilePayment, "-ns1:CreateMobilePayment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateMobilePayment(soap, &soap_tmp___ns1__CreateMobilePayment, "-ns1:CreateMobilePayment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__CreateMobilePaymentResponseType*>(&ns1__CreateMobilePaymentResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CreateMobilePaymentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateMobilePaymentResponse.soap_get(soap, "ns1:CreateMobilePaymentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetMobileStatus(const char *endpoint, const char *soap_action, _ns1__GetMobileStatusReq *ns1__GetMobileStatusReq, ns1__GetMobileStatusResponseType &ns1__GetMobileStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetMobileStatus soap_tmp___ns1__GetMobileStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetMobileStatus.ns1__GetMobileStatusReq = ns1__GetMobileStatusReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMobileStatus(soap, &soap_tmp___ns1__GetMobileStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMobileStatus(soap, &soap_tmp___ns1__GetMobileStatus, "-ns1:GetMobileStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMobileStatus(soap, &soap_tmp___ns1__GetMobileStatus, "-ns1:GetMobileStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetMobileStatusResponseType*>(&ns1__GetMobileStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMobileStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMobileStatusResponse.soap_get(soap, "ns1:GetMobileStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::SetMobileCheckout(const char *endpoint, const char *soap_action, _ns1__SetMobileCheckoutReq *ns1__SetMobileCheckoutReq, ns1__SetMobileCheckoutResponseType &ns1__SetMobileCheckoutResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetMobileCheckout soap_tmp___ns1__SetMobileCheckout;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__SetMobileCheckout.ns1__SetMobileCheckoutReq = ns1__SetMobileCheckoutReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetMobileCheckout(soap, &soap_tmp___ns1__SetMobileCheckout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetMobileCheckout(soap, &soap_tmp___ns1__SetMobileCheckout, "-ns1:SetMobileCheckout", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetMobileCheckout(soap, &soap_tmp___ns1__SetMobileCheckout, "-ns1:SetMobileCheckout", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__SetMobileCheckoutResponseType*>(&ns1__SetMobileCheckoutResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetMobileCheckoutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetMobileCheckoutResponse.soap_get(soap, "ns1:SetMobileCheckoutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoMobileCheckoutPayment(const char *endpoint, const char *soap_action, _ns1__DoMobileCheckoutPaymentReq *ns1__DoMobileCheckoutPaymentReq, ns1__DoMobileCheckoutPaymentResponseType &ns1__DoMobileCheckoutPaymentResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoMobileCheckoutPayment soap_tmp___ns1__DoMobileCheckoutPayment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoMobileCheckoutPayment.ns1__DoMobileCheckoutPaymentReq = ns1__DoMobileCheckoutPaymentReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoMobileCheckoutPayment(soap, &soap_tmp___ns1__DoMobileCheckoutPayment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoMobileCheckoutPayment(soap, &soap_tmp___ns1__DoMobileCheckoutPayment, "-ns1:DoMobileCheckoutPayment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoMobileCheckoutPayment(soap, &soap_tmp___ns1__DoMobileCheckoutPayment, "-ns1:DoMobileCheckoutPayment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoMobileCheckoutPaymentResponseType*>(&ns1__DoMobileCheckoutPaymentResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoMobileCheckoutPaymentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoMobileCheckoutPaymentResponse.soap_get(soap, "ns1:DoMobileCheckoutPaymentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetBalance(const char *endpoint, const char *soap_action, _ns1__GetBalanceReq *ns1__GetBalanceReq, ns1__GetBalanceResponseType &ns1__GetBalanceResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetBalance soap_tmp___ns1__GetBalance;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetBalance.ns1__GetBalanceReq = ns1__GetBalanceReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBalance(soap, &soap_tmp___ns1__GetBalance);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBalance(soap, &soap_tmp___ns1__GetBalance, "-ns1:GetBalance", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBalance(soap, &soap_tmp___ns1__GetBalance, "-ns1:GetBalance", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetBalanceResponseType*>(&ns1__GetBalanceResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetBalanceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBalanceResponse.soap_get(soap, "ns1:GetBalanceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetPalDetails(const char *endpoint, const char *soap_action, _ns1__GetPalDetailsReq *ns1__GetPalDetailsReq, ns1__GetPalDetailsResponseType &ns1__GetPalDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetPalDetails soap_tmp___ns1__GetPalDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetPalDetails.ns1__GetPalDetailsReq = ns1__GetPalDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPalDetails(soap, &soap_tmp___ns1__GetPalDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPalDetails(soap, &soap_tmp___ns1__GetPalDetails, "-ns1:GetPalDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPalDetails(soap, &soap_tmp___ns1__GetPalDetails, "-ns1:GetPalDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetPalDetailsResponseType*>(&ns1__GetPalDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetPalDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPalDetailsResponse.soap_get(soap, "ns1:GetPalDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoExpressCheckoutPayment(const char *endpoint, const char *soap_action, _ns1__DoExpressCheckoutPaymentReq *ns1__DoExpressCheckoutPaymentReq, ns1__DoExpressCheckoutPaymentResponseType &ns1__DoExpressCheckoutPaymentResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoExpressCheckoutPayment soap_tmp___ns1__DoExpressCheckoutPayment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoExpressCheckoutPayment.ns1__DoExpressCheckoutPaymentReq = ns1__DoExpressCheckoutPaymentReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoExpressCheckoutPayment(soap, &soap_tmp___ns1__DoExpressCheckoutPayment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoExpressCheckoutPayment(soap, &soap_tmp___ns1__DoExpressCheckoutPayment, "-ns1:DoExpressCheckoutPayment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoExpressCheckoutPayment(soap, &soap_tmp___ns1__DoExpressCheckoutPayment, "-ns1:DoExpressCheckoutPayment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoExpressCheckoutPaymentResponseType*>(&ns1__DoExpressCheckoutPaymentResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoExpressCheckoutPaymentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoExpressCheckoutPaymentResponse.soap_get(soap, "ns1:DoExpressCheckoutPaymentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoUATPExpressCheckoutPayment(const char *endpoint, const char *soap_action, _ns1__DoUATPExpressCheckoutPaymentReq *ns1__DoUATPExpressCheckoutPaymentReq, ns1__DoUATPExpressCheckoutPaymentResponseType &ns1__DoUATPExpressCheckoutPaymentResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoUATPExpressCheckoutPayment soap_tmp___ns1__DoUATPExpressCheckoutPayment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoUATPExpressCheckoutPayment.ns1__DoUATPExpressCheckoutPaymentReq = ns1__DoUATPExpressCheckoutPaymentReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoUATPExpressCheckoutPayment(soap, &soap_tmp___ns1__DoUATPExpressCheckoutPayment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoUATPExpressCheckoutPayment(soap, &soap_tmp___ns1__DoUATPExpressCheckoutPayment, "-ns1:DoUATPExpressCheckoutPayment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoUATPExpressCheckoutPayment(soap, &soap_tmp___ns1__DoUATPExpressCheckoutPayment, "-ns1:DoUATPExpressCheckoutPayment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoUATPExpressCheckoutPaymentResponseType*>(&ns1__DoUATPExpressCheckoutPaymentResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoUATPExpressCheckoutPaymentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoUATPExpressCheckoutPaymentResponse.soap_get(soap, "ns1:DoUATPExpressCheckoutPaymentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::SetAuthFlowParam(const char *endpoint, const char *soap_action, _ns1__SetAuthFlowParamReq *ns1__SetAuthFlowParamReq, ns1__SetAuthFlowParamResponseType &ns1__SetAuthFlowParamResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetAuthFlowParam soap_tmp___ns1__SetAuthFlowParam;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__SetAuthFlowParam.ns1__SetAuthFlowParamReq = ns1__SetAuthFlowParamReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAuthFlowParam(soap, &soap_tmp___ns1__SetAuthFlowParam);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAuthFlowParam(soap, &soap_tmp___ns1__SetAuthFlowParam, "-ns1:SetAuthFlowParam", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAuthFlowParam(soap, &soap_tmp___ns1__SetAuthFlowParam, "-ns1:SetAuthFlowParam", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__SetAuthFlowParamResponseType*>(&ns1__SetAuthFlowParamResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetAuthFlowParamResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAuthFlowParamResponse.soap_get(soap, "ns1:SetAuthFlowParamResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetAuthDetails(const char *endpoint, const char *soap_action, _ns1__GetAuthDetailsReq *ns1__GetAuthDetailsReq, ns1__GetAuthDetailsResponseType &ns1__GetAuthDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAuthDetails soap_tmp___ns1__GetAuthDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetAuthDetails.ns1__GetAuthDetailsReq = ns1__GetAuthDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAuthDetails(soap, &soap_tmp___ns1__GetAuthDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAuthDetails(soap, &soap_tmp___ns1__GetAuthDetails, "-ns1:GetAuthDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAuthDetails(soap, &soap_tmp___ns1__GetAuthDetails, "-ns1:GetAuthDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetAuthDetailsResponseType*>(&ns1__GetAuthDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetAuthDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAuthDetailsResponse.soap_get(soap, "ns1:GetAuthDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::SetAccessPermissions(const char *endpoint, const char *soap_action, _ns1__SetAccessPermissionsReq *ns1__SetAccessPermissionsReq, ns1__SetAccessPermissionsResponseType &ns1__SetAccessPermissionsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetAccessPermissions soap_tmp___ns1__SetAccessPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__SetAccessPermissions.ns1__SetAccessPermissionsReq = ns1__SetAccessPermissionsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAccessPermissions(soap, &soap_tmp___ns1__SetAccessPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAccessPermissions(soap, &soap_tmp___ns1__SetAccessPermissions, "-ns1:SetAccessPermissions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAccessPermissions(soap, &soap_tmp___ns1__SetAccessPermissions, "-ns1:SetAccessPermissions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__SetAccessPermissionsResponseType*>(&ns1__SetAccessPermissionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetAccessPermissionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAccessPermissionsResponse.soap_get(soap, "ns1:SetAccessPermissionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::UpdateAccessPermissions(const char *endpoint, const char *soap_action, _ns1__UpdateAccessPermissionsReq *ns1__UpdateAccessPermissionsReq, ns1__UpdateAccessPermissionsResponseType &ns1__UpdateAccessPermissionsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__UpdateAccessPermissions soap_tmp___ns1__UpdateAccessPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__UpdateAccessPermissions.ns1__UpdateAccessPermissionsReq = ns1__UpdateAccessPermissionsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateAccessPermissions(soap, &soap_tmp___ns1__UpdateAccessPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateAccessPermissions(soap, &soap_tmp___ns1__UpdateAccessPermissions, "-ns1:UpdateAccessPermissions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateAccessPermissions(soap, &soap_tmp___ns1__UpdateAccessPermissions, "-ns1:UpdateAccessPermissions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__UpdateAccessPermissionsResponseType*>(&ns1__UpdateAccessPermissionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpdateAccessPermissionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateAccessPermissionsResponse.soap_get(soap, "ns1:UpdateAccessPermissionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetAccessPermissionDetails(const char *endpoint, const char *soap_action, _ns1__GetAccessPermissionDetailsReq *ns1__GetAccessPermissionDetailsReq, ns1__GetAccessPermissionDetailsResponseType &ns1__GetAccessPermissionDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAccessPermissionDetails soap_tmp___ns1__GetAccessPermissionDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetAccessPermissionDetails.ns1__GetAccessPermissionDetailsReq = ns1__GetAccessPermissionDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPermissionDetails(soap, &soap_tmp___ns1__GetAccessPermissionDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPermissionDetails(soap, &soap_tmp___ns1__GetAccessPermissionDetails, "-ns1:GetAccessPermissionDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPermissionDetails(soap, &soap_tmp___ns1__GetAccessPermissionDetails, "-ns1:GetAccessPermissionDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetAccessPermissionDetailsResponseType*>(&ns1__GetAccessPermissionDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetAccessPermissionDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPermissionDetailsResponse.soap_get(soap, "ns1:GetAccessPermissionDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetIncentiveEvaluation(const char *endpoint, const char *soap_action, _ns1__GetIncentiveEvaluationReq *ns1__GetIncentiveEvaluationReq, ns1__GetIncentiveEvaluationResponseType &ns1__GetIncentiveEvaluationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetIncentiveEvaluation soap_tmp___ns1__GetIncentiveEvaluation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetIncentiveEvaluation.ns1__GetIncentiveEvaluationReq = ns1__GetIncentiveEvaluationReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetIncentiveEvaluation(soap, &soap_tmp___ns1__GetIncentiveEvaluation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetIncentiveEvaluation(soap, &soap_tmp___ns1__GetIncentiveEvaluation, "-ns1:GetIncentiveEvaluation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetIncentiveEvaluation(soap, &soap_tmp___ns1__GetIncentiveEvaluation, "-ns1:GetIncentiveEvaluation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetIncentiveEvaluationResponseType*>(&ns1__GetIncentiveEvaluationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetIncentiveEvaluationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetIncentiveEvaluationResponse.soap_get(soap, "ns1:GetIncentiveEvaluationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::SetExpressCheckout(const char *endpoint, const char *soap_action, _ns1__SetExpressCheckoutReq *ns1__SetExpressCheckoutReq, ns1__SetExpressCheckoutResponseType &ns1__SetExpressCheckoutResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetExpressCheckout soap_tmp___ns1__SetExpressCheckout;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__SetExpressCheckout.ns1__SetExpressCheckoutReq = ns1__SetExpressCheckoutReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetExpressCheckout(soap, &soap_tmp___ns1__SetExpressCheckout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetExpressCheckout(soap, &soap_tmp___ns1__SetExpressCheckout, "-ns1:SetExpressCheckout", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetExpressCheckout(soap, &soap_tmp___ns1__SetExpressCheckout, "-ns1:SetExpressCheckout", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__SetExpressCheckoutResponseType*>(&ns1__SetExpressCheckoutResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetExpressCheckoutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetExpressCheckoutResponse.soap_get(soap, "ns1:SetExpressCheckoutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::ExecuteCheckoutOperations(const char *endpoint, const char *soap_action, _ns1__ExecuteCheckoutOperationsReq *ns1__ExecuteCheckoutOperationsReq, ns1__ExecuteCheckoutOperationsResponseType &ns1__ExecuteCheckoutOperationsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ExecuteCheckoutOperations soap_tmp___ns1__ExecuteCheckoutOperations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__ExecuteCheckoutOperations.ns1__ExecuteCheckoutOperationsReq = ns1__ExecuteCheckoutOperationsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExecuteCheckoutOperations(soap, &soap_tmp___ns1__ExecuteCheckoutOperations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExecuteCheckoutOperations(soap, &soap_tmp___ns1__ExecuteCheckoutOperations, "-ns1:ExecuteCheckoutOperations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExecuteCheckoutOperations(soap, &soap_tmp___ns1__ExecuteCheckoutOperations, "-ns1:ExecuteCheckoutOperations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__ExecuteCheckoutOperationsResponseType*>(&ns1__ExecuteCheckoutOperationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ExecuteCheckoutOperationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExecuteCheckoutOperationsResponse.soap_get(soap, "ns1:ExecuteCheckoutOperationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetExpressCheckoutDetails(const char *endpoint, const char *soap_action, _ns1__GetExpressCheckoutDetailsReq *ns1__GetExpressCheckoutDetailsReq, ns1__GetExpressCheckoutDetailsResponseType &ns1__GetExpressCheckoutDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetExpressCheckoutDetails soap_tmp___ns1__GetExpressCheckoutDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetExpressCheckoutDetails.ns1__GetExpressCheckoutDetailsReq = ns1__GetExpressCheckoutDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetExpressCheckoutDetails(soap, &soap_tmp___ns1__GetExpressCheckoutDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetExpressCheckoutDetails(soap, &soap_tmp___ns1__GetExpressCheckoutDetails, "-ns1:GetExpressCheckoutDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetExpressCheckoutDetails(soap, &soap_tmp___ns1__GetExpressCheckoutDetails, "-ns1:GetExpressCheckoutDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetExpressCheckoutDetailsResponseType*>(&ns1__GetExpressCheckoutDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetExpressCheckoutDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetExpressCheckoutDetailsResponse.soap_get(soap, "ns1:GetExpressCheckoutDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoDirectPayment(const char *endpoint, const char *soap_action, _ns1__DoDirectPaymentReq *ns1__DoDirectPaymentReq, ns1__DoDirectPaymentResponseType &ns1__DoDirectPaymentResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoDirectPayment soap_tmp___ns1__DoDirectPayment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoDirectPayment.ns1__DoDirectPaymentReq = ns1__DoDirectPaymentReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoDirectPayment(soap, &soap_tmp___ns1__DoDirectPayment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoDirectPayment(soap, &soap_tmp___ns1__DoDirectPayment, "-ns1:DoDirectPayment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoDirectPayment(soap, &soap_tmp___ns1__DoDirectPayment, "-ns1:DoDirectPayment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoDirectPaymentResponseType*>(&ns1__DoDirectPaymentResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoDirectPaymentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoDirectPaymentResponse.soap_get(soap, "ns1:DoDirectPaymentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::ManagePendingTransactionStatus(const char *endpoint, const char *soap_action, _ns1__ManagePendingTransactionStatusReq *ns1__ManagePendingTransactionStatusReq, ns1__ManagePendingTransactionStatusResponseType &ns1__ManagePendingTransactionStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ManagePendingTransactionStatus soap_tmp___ns1__ManagePendingTransactionStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__ManagePendingTransactionStatus.ns1__ManagePendingTransactionStatusReq = ns1__ManagePendingTransactionStatusReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ManagePendingTransactionStatus(soap, &soap_tmp___ns1__ManagePendingTransactionStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ManagePendingTransactionStatus(soap, &soap_tmp___ns1__ManagePendingTransactionStatus, "-ns1:ManagePendingTransactionStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ManagePendingTransactionStatus(soap, &soap_tmp___ns1__ManagePendingTransactionStatus, "-ns1:ManagePendingTransactionStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__ManagePendingTransactionStatusResponseType*>(&ns1__ManagePendingTransactionStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ManagePendingTransactionStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ManagePendingTransactionStatusResponse.soap_get(soap, "ns1:ManagePendingTransactionStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoCancel(const char *endpoint, const char *soap_action, _ns1__DoCancelReq *ns1__DoCancelReq, ns1__DoCancelResponseType &ns1__DoCancelResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoCancel soap_tmp___ns1__DoCancel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoCancel.ns1__DoCancelReq = ns1__DoCancelReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoCancel(soap, &soap_tmp___ns1__DoCancel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoCancel(soap, &soap_tmp___ns1__DoCancel, "-ns1:DoCancel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoCancel(soap, &soap_tmp___ns1__DoCancel, "-ns1:DoCancel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoCancelResponseType*>(&ns1__DoCancelResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoCancelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoCancelResponse.soap_get(soap, "ns1:DoCancelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoCapture(const char *endpoint, const char *soap_action, _ns1__DoCaptureReq *ns1__DoCaptureReq, ns1__DoCaptureResponseType &ns1__DoCaptureResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoCapture soap_tmp___ns1__DoCapture;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoCapture.ns1__DoCaptureReq = ns1__DoCaptureReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoCapture(soap, &soap_tmp___ns1__DoCapture);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoCapture(soap, &soap_tmp___ns1__DoCapture, "-ns1:DoCapture", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoCapture(soap, &soap_tmp___ns1__DoCapture, "-ns1:DoCapture", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoCaptureResponseType*>(&ns1__DoCaptureResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoCaptureResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoCaptureResponse.soap_get(soap, "ns1:DoCaptureResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoReauthorization(const char *endpoint, const char *soap_action, _ns1__DoReauthorizationReq *ns1__DoReauthorizationReq, ns1__DoReauthorizationResponseType &ns1__DoReauthorizationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoReauthorization soap_tmp___ns1__DoReauthorization;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoReauthorization.ns1__DoReauthorizationReq = ns1__DoReauthorizationReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoReauthorization(soap, &soap_tmp___ns1__DoReauthorization);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoReauthorization(soap, &soap_tmp___ns1__DoReauthorization, "-ns1:DoReauthorization", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoReauthorization(soap, &soap_tmp___ns1__DoReauthorization, "-ns1:DoReauthorization", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoReauthorizationResponseType*>(&ns1__DoReauthorizationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoReauthorizationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoReauthorizationResponse.soap_get(soap, "ns1:DoReauthorizationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoVoid(const char *endpoint, const char *soap_action, _ns1__DoVoidReq *ns1__DoVoidReq, ns1__DoVoidResponseType &ns1__DoVoidResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoVoid soap_tmp___ns1__DoVoid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoVoid.ns1__DoVoidReq = ns1__DoVoidReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoVoid(soap, &soap_tmp___ns1__DoVoid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoVoid(soap, &soap_tmp___ns1__DoVoid, "-ns1:DoVoid", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoVoid(soap, &soap_tmp___ns1__DoVoid, "-ns1:DoVoid", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoVoidResponseType*>(&ns1__DoVoidResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoVoidResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoVoidResponse.soap_get(soap, "ns1:DoVoidResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoAuthorization(const char *endpoint, const char *soap_action, _ns1__DoAuthorizationReq *ns1__DoAuthorizationReq, ns1__DoAuthorizationResponseType &ns1__DoAuthorizationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoAuthorization soap_tmp___ns1__DoAuthorization;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoAuthorization.ns1__DoAuthorizationReq = ns1__DoAuthorizationReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoAuthorization(soap, &soap_tmp___ns1__DoAuthorization);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoAuthorization(soap, &soap_tmp___ns1__DoAuthorization, "-ns1:DoAuthorization", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoAuthorization(soap, &soap_tmp___ns1__DoAuthorization, "-ns1:DoAuthorization", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoAuthorizationResponseType*>(&ns1__DoAuthorizationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoAuthorizationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoAuthorizationResponse.soap_get(soap, "ns1:DoAuthorizationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::UpdateAuthorization(const char *endpoint, const char *soap_action, _ns1__UpdateAuthorizationReq *ns1__UpdateAuthorizationReq, ns1__UpdateAuthorizationResponseType &ns1__UpdateAuthorizationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__UpdateAuthorization soap_tmp___ns1__UpdateAuthorization;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__UpdateAuthorization.ns1__UpdateAuthorizationReq = ns1__UpdateAuthorizationReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateAuthorization(soap, &soap_tmp___ns1__UpdateAuthorization);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateAuthorization(soap, &soap_tmp___ns1__UpdateAuthorization, "-ns1:UpdateAuthorization", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateAuthorization(soap, &soap_tmp___ns1__UpdateAuthorization, "-ns1:UpdateAuthorization", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__UpdateAuthorizationResponseType*>(&ns1__UpdateAuthorizationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpdateAuthorizationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateAuthorizationResponse.soap_get(soap, "ns1:UpdateAuthorizationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoUATPAuthorization(const char *endpoint, const char *soap_action, _ns1__DoUATPAuthorizationReq *ns1__DoUATPAuthorizationReq, ns1__DoUATPAuthorizationResponseType &ns1__DoUATPAuthorizationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoUATPAuthorization soap_tmp___ns1__DoUATPAuthorization;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoUATPAuthorization.ns1__DoUATPAuthorizationReq = ns1__DoUATPAuthorizationReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoUATPAuthorization(soap, &soap_tmp___ns1__DoUATPAuthorization);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoUATPAuthorization(soap, &soap_tmp___ns1__DoUATPAuthorization, "-ns1:DoUATPAuthorization", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoUATPAuthorization(soap, &soap_tmp___ns1__DoUATPAuthorization, "-ns1:DoUATPAuthorization", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoUATPAuthorizationResponseType*>(&ns1__DoUATPAuthorizationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoUATPAuthorizationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoUATPAuthorizationResponse.soap_get(soap, "ns1:DoUATPAuthorizationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::SetCustomerBillingAgreement(const char *endpoint, const char *soap_action, _ns1__SetCustomerBillingAgreementReq *ns1__SetCustomerBillingAgreementReq, ns1__SetCustomerBillingAgreementResponseType &ns1__SetCustomerBillingAgreementResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetCustomerBillingAgreement soap_tmp___ns1__SetCustomerBillingAgreement;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__SetCustomerBillingAgreement.ns1__SetCustomerBillingAgreementReq = ns1__SetCustomerBillingAgreementReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetCustomerBillingAgreement(soap, &soap_tmp___ns1__SetCustomerBillingAgreement);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetCustomerBillingAgreement(soap, &soap_tmp___ns1__SetCustomerBillingAgreement, "-ns1:SetCustomerBillingAgreement", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetCustomerBillingAgreement(soap, &soap_tmp___ns1__SetCustomerBillingAgreement, "-ns1:SetCustomerBillingAgreement", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__SetCustomerBillingAgreementResponseType*>(&ns1__SetCustomerBillingAgreementResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetCustomerBillingAgreementResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetCustomerBillingAgreementResponse.soap_get(soap, "ns1:SetCustomerBillingAgreementResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetBillingAgreementCustomerDetails(const char *endpoint, const char *soap_action, _ns1__GetBillingAgreementCustomerDetailsReq *ns1__GetBillingAgreementCustomerDetailsReq, ns1__GetBillingAgreementCustomerDetailsResponseType &ns1__GetBillingAgreementCustomerDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetBillingAgreementCustomerDetails soap_tmp___ns1__GetBillingAgreementCustomerDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetBillingAgreementCustomerDetails.ns1__GetBillingAgreementCustomerDetailsReq = ns1__GetBillingAgreementCustomerDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBillingAgreementCustomerDetails(soap, &soap_tmp___ns1__GetBillingAgreementCustomerDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBillingAgreementCustomerDetails(soap, &soap_tmp___ns1__GetBillingAgreementCustomerDetails, "-ns1:GetBillingAgreementCustomerDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBillingAgreementCustomerDetails(soap, &soap_tmp___ns1__GetBillingAgreementCustomerDetails, "-ns1:GetBillingAgreementCustomerDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetBillingAgreementCustomerDetailsResponseType*>(&ns1__GetBillingAgreementCustomerDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetBillingAgreementCustomerDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBillingAgreementCustomerDetailsResponse.soap_get(soap, "ns1:GetBillingAgreementCustomerDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::CreateBillingAgreement(const char *endpoint, const char *soap_action, _ns1__CreateBillingAgreementReq *ns1__CreateBillingAgreementReq, ns1__CreateBillingAgreementResponseType &ns1__CreateBillingAgreementResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateBillingAgreement soap_tmp___ns1__CreateBillingAgreement;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__CreateBillingAgreement.ns1__CreateBillingAgreementReq = ns1__CreateBillingAgreementReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateBillingAgreement(soap, &soap_tmp___ns1__CreateBillingAgreement);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateBillingAgreement(soap, &soap_tmp___ns1__CreateBillingAgreement, "-ns1:CreateBillingAgreement", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateBillingAgreement(soap, &soap_tmp___ns1__CreateBillingAgreement, "-ns1:CreateBillingAgreement", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__CreateBillingAgreementResponseType*>(&ns1__CreateBillingAgreementResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CreateBillingAgreementResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateBillingAgreementResponse.soap_get(soap, "ns1:CreateBillingAgreementResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoReferenceTransaction(const char *endpoint, const char *soap_action, _ns1__DoReferenceTransactionReq *ns1__DoReferenceTransactionReq, ns1__DoReferenceTransactionResponseType &ns1__DoReferenceTransactionResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoReferenceTransaction soap_tmp___ns1__DoReferenceTransaction;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoReferenceTransaction.ns1__DoReferenceTransactionReq = ns1__DoReferenceTransactionReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoReferenceTransaction(soap, &soap_tmp___ns1__DoReferenceTransaction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoReferenceTransaction(soap, &soap_tmp___ns1__DoReferenceTransaction, "-ns1:DoReferenceTransaction", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoReferenceTransaction(soap, &soap_tmp___ns1__DoReferenceTransaction, "-ns1:DoReferenceTransaction", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoReferenceTransactionResponseType*>(&ns1__DoReferenceTransactionResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoReferenceTransactionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoReferenceTransactionResponse.soap_get(soap, "ns1:DoReferenceTransactionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::CreateRecurringPaymentsProfile(const char *endpoint, const char *soap_action, _ns1__CreateRecurringPaymentsProfileReq *ns1__CreateRecurringPaymentsProfileReq, ns1__CreateRecurringPaymentsProfileResponseType &ns1__CreateRecurringPaymentsProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateRecurringPaymentsProfile soap_tmp___ns1__CreateRecurringPaymentsProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__CreateRecurringPaymentsProfile.ns1__CreateRecurringPaymentsProfileReq = ns1__CreateRecurringPaymentsProfileReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateRecurringPaymentsProfile(soap, &soap_tmp___ns1__CreateRecurringPaymentsProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateRecurringPaymentsProfile(soap, &soap_tmp___ns1__CreateRecurringPaymentsProfile, "-ns1:CreateRecurringPaymentsProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateRecurringPaymentsProfile(soap, &soap_tmp___ns1__CreateRecurringPaymentsProfile, "-ns1:CreateRecurringPaymentsProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__CreateRecurringPaymentsProfileResponseType*>(&ns1__CreateRecurringPaymentsProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CreateRecurringPaymentsProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateRecurringPaymentsProfileResponse.soap_get(soap, "ns1:CreateRecurringPaymentsProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::GetRecurringPaymentsProfileDetails(const char *endpoint, const char *soap_action, _ns1__GetRecurringPaymentsProfileDetailsReq *ns1__GetRecurringPaymentsProfileDetailsReq, ns1__GetRecurringPaymentsProfileDetailsResponseType &ns1__GetRecurringPaymentsProfileDetailsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetRecurringPaymentsProfileDetails soap_tmp___ns1__GetRecurringPaymentsProfileDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__GetRecurringPaymentsProfileDetails.ns1__GetRecurringPaymentsProfileDetailsReq = ns1__GetRecurringPaymentsProfileDetailsReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRecurringPaymentsProfileDetails(soap, &soap_tmp___ns1__GetRecurringPaymentsProfileDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRecurringPaymentsProfileDetails(soap, &soap_tmp___ns1__GetRecurringPaymentsProfileDetails, "-ns1:GetRecurringPaymentsProfileDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRecurringPaymentsProfileDetails(soap, &soap_tmp___ns1__GetRecurringPaymentsProfileDetails, "-ns1:GetRecurringPaymentsProfileDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__GetRecurringPaymentsProfileDetailsResponseType*>(&ns1__GetRecurringPaymentsProfileDetailsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetRecurringPaymentsProfileDetailsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRecurringPaymentsProfileDetailsResponse.soap_get(soap, "ns1:GetRecurringPaymentsProfileDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::ManageRecurringPaymentsProfileStatus(const char *endpoint, const char *soap_action, _ns1__ManageRecurringPaymentsProfileStatusReq *ns1__ManageRecurringPaymentsProfileStatusReq, ns1__ManageRecurringPaymentsProfileStatusResponseType &ns1__ManageRecurringPaymentsProfileStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ManageRecurringPaymentsProfileStatus soap_tmp___ns1__ManageRecurringPaymentsProfileStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__ManageRecurringPaymentsProfileStatus.ns1__ManageRecurringPaymentsProfileStatusReq = ns1__ManageRecurringPaymentsProfileStatusReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ManageRecurringPaymentsProfileStatus(soap, &soap_tmp___ns1__ManageRecurringPaymentsProfileStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ManageRecurringPaymentsProfileStatus(soap, &soap_tmp___ns1__ManageRecurringPaymentsProfileStatus, "-ns1:ManageRecurringPaymentsProfileStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ManageRecurringPaymentsProfileStatus(soap, &soap_tmp___ns1__ManageRecurringPaymentsProfileStatus, "-ns1:ManageRecurringPaymentsProfileStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__ManageRecurringPaymentsProfileStatusResponseType*>(&ns1__ManageRecurringPaymentsProfileStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ManageRecurringPaymentsProfileStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ManageRecurringPaymentsProfileStatusResponse.soap_get(soap, "ns1:ManageRecurringPaymentsProfileStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::BillOutstandingAmount(const char *endpoint, const char *soap_action, _ns1__BillOutstandingAmountReq *ns1__BillOutstandingAmountReq, ns1__BillOutstandingAmountResponseType &ns1__BillOutstandingAmountResponse)
{	struct soap *soap = this->soap;
	struct __ns1__BillOutstandingAmount soap_tmp___ns1__BillOutstandingAmount;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__BillOutstandingAmount.ns1__BillOutstandingAmountReq = ns1__BillOutstandingAmountReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__BillOutstandingAmount(soap, &soap_tmp___ns1__BillOutstandingAmount);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BillOutstandingAmount(soap, &soap_tmp___ns1__BillOutstandingAmount, "-ns1:BillOutstandingAmount", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BillOutstandingAmount(soap, &soap_tmp___ns1__BillOutstandingAmount, "-ns1:BillOutstandingAmount", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__BillOutstandingAmountResponseType*>(&ns1__BillOutstandingAmountResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__BillOutstandingAmountResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BillOutstandingAmountResponse.soap_get(soap, "ns1:BillOutstandingAmountResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::UpdateRecurringPaymentsProfile(const char *endpoint, const char *soap_action, _ns1__UpdateRecurringPaymentsProfileReq *ns1__UpdateRecurringPaymentsProfileReq, ns1__UpdateRecurringPaymentsProfileResponseType &ns1__UpdateRecurringPaymentsProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns1__UpdateRecurringPaymentsProfile soap_tmp___ns1__UpdateRecurringPaymentsProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__UpdateRecurringPaymentsProfile.ns1__UpdateRecurringPaymentsProfileReq = ns1__UpdateRecurringPaymentsProfileReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateRecurringPaymentsProfile(soap, &soap_tmp___ns1__UpdateRecurringPaymentsProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateRecurringPaymentsProfile(soap, &soap_tmp___ns1__UpdateRecurringPaymentsProfile, "-ns1:UpdateRecurringPaymentsProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateRecurringPaymentsProfile(soap, &soap_tmp___ns1__UpdateRecurringPaymentsProfile, "-ns1:UpdateRecurringPaymentsProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__UpdateRecurringPaymentsProfileResponseType*>(&ns1__UpdateRecurringPaymentsProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpdateRecurringPaymentsProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateRecurringPaymentsProfileResponse.soap_get(soap, "ns1:UpdateRecurringPaymentsProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::DoNonReferencedCredit(const char *endpoint, const char *soap_action, _ns1__DoNonReferencedCreditReq *ns1__DoNonReferencedCreditReq, ns1__DoNonReferencedCreditResponseType &ns1__DoNonReferencedCreditResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DoNonReferencedCredit soap_tmp___ns1__DoNonReferencedCredit;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__DoNonReferencedCredit.ns1__DoNonReferencedCreditReq = ns1__DoNonReferencedCreditReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DoNonReferencedCredit(soap, &soap_tmp___ns1__DoNonReferencedCredit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DoNonReferencedCredit(soap, &soap_tmp___ns1__DoNonReferencedCredit, "-ns1:DoNonReferencedCredit", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DoNonReferencedCredit(soap, &soap_tmp___ns1__DoNonReferencedCredit, "-ns1:DoNonReferencedCredit", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__DoNonReferencedCreditResponseType*>(&ns1__DoNonReferencedCreditResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DoNonReferencedCreditResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DoNonReferencedCreditResponse.soap_get(soap, "ns1:DoNonReferencedCreditResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::ReverseTransaction(const char *endpoint, const char *soap_action, _ns1__ReverseTransactionReq *ns1__ReverseTransactionReq, ns1__ReverseTransactionResponseType &ns1__ReverseTransactionResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ReverseTransaction soap_tmp___ns1__ReverseTransaction;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__ReverseTransaction.ns1__ReverseTransactionReq = ns1__ReverseTransactionReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ReverseTransaction(soap, &soap_tmp___ns1__ReverseTransaction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReverseTransaction(soap, &soap_tmp___ns1__ReverseTransaction, "-ns1:ReverseTransaction", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReverseTransaction(soap, &soap_tmp___ns1__ReverseTransaction, "-ns1:ReverseTransaction", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__ReverseTransactionResponseType*>(&ns1__ReverseTransactionResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ReverseTransactionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReverseTransactionResponse.soap_get(soap, "ns1:ReverseTransactionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PayPalAPISoapBindingProxy::ExternalRememberMeOptOut(const char *endpoint, const char *soap_action, _ns1__ExternalRememberMeOptOutReq *ns1__ExternalRememberMeOptOutReq, ns1__ExternalRememberMeOptOutResponseType &ns1__ExternalRememberMeOptOutResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ExternalRememberMeOptOut soap_tmp___ns1__ExternalRememberMeOptOut;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://api-aa.sandbox.paypal.com/2.0/ https://api.sandbox.paypal.com/2.0/";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__ExternalRememberMeOptOut.ns1__ExternalRememberMeOptOutReq = ns1__ExternalRememberMeOptOutReq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExternalRememberMeOptOut(soap, &soap_tmp___ns1__ExternalRememberMeOptOut);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExternalRememberMeOptOut(soap, &soap_tmp___ns1__ExternalRememberMeOptOut, "-ns1:ExternalRememberMeOptOut", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExternalRememberMeOptOut(soap, &soap_tmp___ns1__ExternalRememberMeOptOut, "-ns1:ExternalRememberMeOptOut", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__ExternalRememberMeOptOutResponseType*>(&ns1__ExternalRememberMeOptOutResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ExternalRememberMeOptOutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExternalRememberMeOptOutResponse.soap_get(soap, "ns1:ExternalRememberMeOptOutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
