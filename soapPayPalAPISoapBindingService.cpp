/* soapPayPalAPISoapBindingService.cpp
   Generated by gSOAP 2.8.54 for paypal.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapPayPalAPISoapBindingService.h"

PayPalAPISoapBindingService::PayPalAPISoapBindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	PayPalAPISoapBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PayPalAPISoapBindingService::PayPalAPISoapBindingService(const PayPalAPISoapBindingService& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
}

PayPalAPISoapBindingService::PayPalAPISoapBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	PayPalAPISoapBindingService_init(_soap->imode, _soap->omode);
}

PayPalAPISoapBindingService::PayPalAPISoapBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PayPalAPISoapBindingService_init(iomode, iomode);
}

PayPalAPISoapBindingService::PayPalAPISoapBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	PayPalAPISoapBindingService_init(imode, omode);
}

PayPalAPISoapBindingService::~PayPalAPISoapBindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void PayPalAPISoapBindingService::PayPalAPISoapBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
        {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns2", "urn:ebay:apis:CoreComponentTypes", NULL, NULL},
        {"ns4", "urn:ebay:apis:EnhancedDataTypes", NULL, NULL},
        {"ns3", "urn:ebay:apis:eBLBaseComponents", NULL, NULL},
        {"ns1", "urn:ebay:api:PayPalAPI", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

void PayPalAPISoapBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void PayPalAPISoapBindingService::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	PayPalAPISoapBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
PayPalAPISoapBindingService *PayPalAPISoapBindingService::copy()
{	PayPalAPISoapBindingService *dup = SOAP_NEW_COPY(PayPalAPISoapBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

PayPalAPISoapBindingService& PayPalAPISoapBindingService::operator=(const PayPalAPISoapBindingService& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
	}
	return *this;
}

int PayPalAPISoapBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int PayPalAPISoapBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int PayPalAPISoapBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int PayPalAPISoapBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int PayPalAPISoapBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int PayPalAPISoapBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void PayPalAPISoapBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PayPalAPISoapBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *PayPalAPISoapBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void PayPalAPISoapBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void PayPalAPISoapBindingService::soap_header(ns3__CustomSecurityHeaderType *ns1__RequesterCredentials)
{	::soap_header(this->soap);
	this->soap->header->ns1__RequesterCredentials = ns1__RequesterCredentials;
}

::SOAP_ENV__Header *PayPalAPISoapBindingService::soap_header()
{	return this->soap->header;
}

#ifndef WITH_NOIO
int PayPalAPISoapBindingService::run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int PayPalAPISoapBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}
#endif

SOAP_SOCKET PayPalAPISoapBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET PayPalAPISoapBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int PayPalAPISoapBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int PayPalAPISoapBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
			this->soap->keep_alive--;
#endif
		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns1__RefundTransaction(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__InitiateRecoup(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__CompleteRecoup(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__CancelRecoup(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetTransactionDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BMCreateButton(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BMUpdateButton(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BMSetInventory(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BMGetButtonDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BMGetInventory(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BMManageButtonStatus(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BMButtonSearch(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BillUser(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__TransactionSearch(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__MassPay(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BillAgreementUpdate(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__AddressVerify(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__EnterBoarding(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetBoardingDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__CreateMobilePayment(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetMobileStatus(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__SetMobileCheckout(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoMobileCheckoutPayment(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetBalance(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetPalDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoExpressCheckoutPayment(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoUATPExpressCheckoutPayment(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__SetAuthFlowParam(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetAuthDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__SetAccessPermissions(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__UpdateAccessPermissions(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetAccessPermissionDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetIncentiveEvaluation(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__SetExpressCheckout(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__ExecuteCheckoutOperations(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetExpressCheckoutDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoDirectPayment(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__ManagePendingTransactionStatus(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoCancel(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoCapture(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoReauthorization(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoVoid(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoAuthorization(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__UpdateAuthorization(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoUATPAuthorization(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__SetCustomerBillingAgreement(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetBillingAgreementCustomerDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__CreateBillingAgreement(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoReferenceTransaction(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__CreateRecurringPaymentsProfile(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__GetRecurringPaymentsProfileDetails(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__ManageRecurringPaymentsProfileStatus(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__BillOutstandingAmount(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__UpdateRecurringPaymentsProfile(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__DoNonReferencedCredit(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__ReverseTransaction(struct soap*, PayPalAPISoapBindingService*);
static int serve___ns1__ExternalRememberMeOptOut(struct soap*, PayPalAPISoapBindingService*);

int PayPalAPISoapBindingService::dispatch()
{	return dispatch(this->soap);
}

int PayPalAPISoapBindingService::dispatch(struct soap* soap)
{
	PayPalAPISoapBindingService_init(soap->imode, soap->omode);

	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:RefundTransactionReq"))
		return serve___ns1__RefundTransaction(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:InitiateRecoupReq"))
		return serve___ns1__InitiateRecoup(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:CompleteRecoupReq"))
		return serve___ns1__CompleteRecoup(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:CancelRecoupReq"))
		return serve___ns1__CancelRecoup(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetTransactionDetailsReq"))
		return serve___ns1__GetTransactionDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BMCreateButtonReq"))
		return serve___ns1__BMCreateButton(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BMUpdateButtonReq"))
		return serve___ns1__BMUpdateButton(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BMSetInventoryReq"))
		return serve___ns1__BMSetInventory(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BMGetButtonDetailsReq"))
		return serve___ns1__BMGetButtonDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BMGetInventoryReq"))
		return serve___ns1__BMGetInventory(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BMManageButtonStatusReq"))
		return serve___ns1__BMManageButtonStatus(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BMButtonSearchReq"))
		return serve___ns1__BMButtonSearch(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BillUserReq"))
		return serve___ns1__BillUser(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:TransactionSearchReq"))
		return serve___ns1__TransactionSearch(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:MassPayReq"))
		return serve___ns1__MassPay(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BillAgreementUpdateReq"))
		return serve___ns1__BillAgreementUpdate(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:AddressVerifyReq"))
		return serve___ns1__AddressVerify(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:EnterBoardingReq"))
		return serve___ns1__EnterBoarding(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetBoardingDetailsReq"))
		return serve___ns1__GetBoardingDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:CreateMobilePaymentReq"))
		return serve___ns1__CreateMobilePayment(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetMobileStatusReq"))
		return serve___ns1__GetMobileStatus(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:SetMobileCheckoutReq"))
		return serve___ns1__SetMobileCheckout(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoMobileCheckoutPaymentReq"))
		return serve___ns1__DoMobileCheckoutPayment(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetBalanceReq"))
		return serve___ns1__GetBalance(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetPalDetailsReq"))
		return serve___ns1__GetPalDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoExpressCheckoutPaymentReq"))
		return serve___ns1__DoExpressCheckoutPayment(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoUATPExpressCheckoutPaymentReq"))
		return serve___ns1__DoUATPExpressCheckoutPayment(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:SetAuthFlowParamReq"))
		return serve___ns1__SetAuthFlowParam(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetAuthDetailsReq"))
		return serve___ns1__GetAuthDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:SetAccessPermissionsReq"))
		return serve___ns1__SetAccessPermissions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:UpdateAccessPermissionsReq"))
		return serve___ns1__UpdateAccessPermissions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetAccessPermissionDetailsReq"))
		return serve___ns1__GetAccessPermissionDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetIncentiveEvaluationReq"))
		return serve___ns1__GetIncentiveEvaluation(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:SetExpressCheckoutReq"))
		return serve___ns1__SetExpressCheckout(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:ExecuteCheckoutOperationsReq"))
		return serve___ns1__ExecuteCheckoutOperations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetExpressCheckoutDetailsReq"))
		return serve___ns1__GetExpressCheckoutDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoDirectPaymentReq"))
		return serve___ns1__DoDirectPayment(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:ManagePendingTransactionStatusReq"))
		return serve___ns1__ManagePendingTransactionStatus(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoCancelReq"))
		return serve___ns1__DoCancel(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoCaptureReq"))
		return serve___ns1__DoCapture(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoReauthorizationReq"))
		return serve___ns1__DoReauthorization(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoVoidReq"))
		return serve___ns1__DoVoid(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoAuthorizationReq"))
		return serve___ns1__DoAuthorization(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:UpdateAuthorizationReq"))
		return serve___ns1__UpdateAuthorization(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoUATPAuthorizationReq"))
		return serve___ns1__DoUATPAuthorization(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:SetCustomerBillingAgreementReq"))
		return serve___ns1__SetCustomerBillingAgreement(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetBillingAgreementCustomerDetailsReq"))
		return serve___ns1__GetBillingAgreementCustomerDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:CreateBillingAgreementReq"))
		return serve___ns1__CreateBillingAgreement(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoReferenceTransactionReq"))
		return serve___ns1__DoReferenceTransaction(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:CreateRecurringPaymentsProfileReq"))
		return serve___ns1__CreateRecurringPaymentsProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetRecurringPaymentsProfileDetailsReq"))
		return serve___ns1__GetRecurringPaymentsProfileDetails(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:ManageRecurringPaymentsProfileStatusReq"))
		return serve___ns1__ManageRecurringPaymentsProfileStatus(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:BillOutstandingAmountReq"))
		return serve___ns1__BillOutstandingAmount(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:UpdateRecurringPaymentsProfileReq"))
		return serve___ns1__UpdateRecurringPaymentsProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:DoNonReferencedCreditReq"))
		return serve___ns1__DoNonReferencedCredit(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:ReverseTransactionReq"))
		return serve___ns1__ReverseTransaction(soap, this);
	if (!soap_match_tag(soap, soap->tag, "ns1:ExternalRememberMeOptOutReq"))
		return serve___ns1__ExternalRememberMeOptOut(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___ns1__RefundTransaction(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__RefundTransaction soap_tmp___ns1__RefundTransaction;
	ns1__RefundTransactionResponseType ns1__RefundTransactionResponse;
	ns1__RefundTransactionResponse.soap_default(soap);
	soap_default___ns1__RefundTransaction(soap, &soap_tmp___ns1__RefundTransaction);
	if (!soap_get___ns1__RefundTransaction(soap, &soap_tmp___ns1__RefundTransaction, "-ns1:RefundTransaction", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RefundTransaction(soap_tmp___ns1__RefundTransaction.ns1__RefundTransactionReq, ns1__RefundTransactionResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__RefundTransactionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__RefundTransactionResponse.soap_put(soap, "ns1:RefundTransactionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__RefundTransactionResponse.soap_put(soap, "ns1:RefundTransactionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__InitiateRecoup(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__InitiateRecoup soap_tmp___ns1__InitiateRecoup;
	ns1__InitiateRecoupResponseType ns1__InitiateRecoupResponse;
	ns1__InitiateRecoupResponse.soap_default(soap);
	soap_default___ns1__InitiateRecoup(soap, &soap_tmp___ns1__InitiateRecoup);
	if (!soap_get___ns1__InitiateRecoup(soap, &soap_tmp___ns1__InitiateRecoup, "-ns1:InitiateRecoup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->InitiateRecoup(soap_tmp___ns1__InitiateRecoup.ns1__InitiateRecoupReq, ns1__InitiateRecoupResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__InitiateRecoupResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__InitiateRecoupResponse.soap_put(soap, "ns1:InitiateRecoupResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__InitiateRecoupResponse.soap_put(soap, "ns1:InitiateRecoupResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CompleteRecoup(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__CompleteRecoup soap_tmp___ns1__CompleteRecoup;
	ns1__CompleteRecoupResponseType ns1__CompleteRecoupResponse;
	ns1__CompleteRecoupResponse.soap_default(soap);
	soap_default___ns1__CompleteRecoup(soap, &soap_tmp___ns1__CompleteRecoup);
	if (!soap_get___ns1__CompleteRecoup(soap, &soap_tmp___ns1__CompleteRecoup, "-ns1:CompleteRecoup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CompleteRecoup(soap_tmp___ns1__CompleteRecoup.ns1__CompleteRecoupReq, ns1__CompleteRecoupResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CompleteRecoupResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CompleteRecoupResponse.soap_put(soap, "ns1:CompleteRecoupResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CompleteRecoupResponse.soap_put(soap, "ns1:CompleteRecoupResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CancelRecoup(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__CancelRecoup soap_tmp___ns1__CancelRecoup;
	ns1__CancelRecoupResponseType ns1__CancelRecoupResponse;
	ns1__CancelRecoupResponse.soap_default(soap);
	soap_default___ns1__CancelRecoup(soap, &soap_tmp___ns1__CancelRecoup);
	if (!soap_get___ns1__CancelRecoup(soap, &soap_tmp___ns1__CancelRecoup, "-ns1:CancelRecoup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CancelRecoup(soap_tmp___ns1__CancelRecoup.ns1__CancelRecoupReq, ns1__CancelRecoupResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CancelRecoupResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CancelRecoupResponse.soap_put(soap, "ns1:CancelRecoupResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CancelRecoupResponse.soap_put(soap, "ns1:CancelRecoupResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetTransactionDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetTransactionDetails soap_tmp___ns1__GetTransactionDetails;
	ns1__GetTransactionDetailsResponseType ns1__GetTransactionDetailsResponse;
	ns1__GetTransactionDetailsResponse.soap_default(soap);
	soap_default___ns1__GetTransactionDetails(soap, &soap_tmp___ns1__GetTransactionDetails);
	if (!soap_get___ns1__GetTransactionDetails(soap, &soap_tmp___ns1__GetTransactionDetails, "-ns1:GetTransactionDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetTransactionDetails(soap_tmp___ns1__GetTransactionDetails.ns1__GetTransactionDetailsReq, ns1__GetTransactionDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetTransactionDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetTransactionDetailsResponse.soap_put(soap, "ns1:GetTransactionDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetTransactionDetailsResponse.soap_put(soap, "ns1:GetTransactionDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BMCreateButton(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BMCreateButton soap_tmp___ns1__BMCreateButton;
	ns1__BMCreateButtonResponseType ns1__BMCreateButtonResponse;
	ns1__BMCreateButtonResponse.soap_default(soap);
	soap_default___ns1__BMCreateButton(soap, &soap_tmp___ns1__BMCreateButton);
	if (!soap_get___ns1__BMCreateButton(soap, &soap_tmp___ns1__BMCreateButton, "-ns1:BMCreateButton", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BMCreateButton(soap_tmp___ns1__BMCreateButton.ns1__BMCreateButtonReq, ns1__BMCreateButtonResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BMCreateButtonResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BMCreateButtonResponse.soap_put(soap, "ns1:BMCreateButtonResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BMCreateButtonResponse.soap_put(soap, "ns1:BMCreateButtonResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BMUpdateButton(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BMUpdateButton soap_tmp___ns1__BMUpdateButton;
	ns1__BMUpdateButtonResponseType ns1__BMUpdateButtonResponse;
	ns1__BMUpdateButtonResponse.soap_default(soap);
	soap_default___ns1__BMUpdateButton(soap, &soap_tmp___ns1__BMUpdateButton);
	if (!soap_get___ns1__BMUpdateButton(soap, &soap_tmp___ns1__BMUpdateButton, "-ns1:BMUpdateButton", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BMUpdateButton(soap_tmp___ns1__BMUpdateButton.ns1__BMUpdateButtonReq, ns1__BMUpdateButtonResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BMUpdateButtonResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BMUpdateButtonResponse.soap_put(soap, "ns1:BMUpdateButtonResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BMUpdateButtonResponse.soap_put(soap, "ns1:BMUpdateButtonResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BMSetInventory(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BMSetInventory soap_tmp___ns1__BMSetInventory;
	ns1__BMSetInventoryResponseType ns1__BMSetInventoryResponse;
	ns1__BMSetInventoryResponse.soap_default(soap);
	soap_default___ns1__BMSetInventory(soap, &soap_tmp___ns1__BMSetInventory);
	if (!soap_get___ns1__BMSetInventory(soap, &soap_tmp___ns1__BMSetInventory, "-ns1:BMSetInventory", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BMSetInventory(soap_tmp___ns1__BMSetInventory.ns1__BMSetInventoryReq, ns1__BMSetInventoryResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BMSetInventoryResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BMSetInventoryResponse.soap_put(soap, "ns1:BMSetInventoryResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BMSetInventoryResponse.soap_put(soap, "ns1:BMSetInventoryResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BMGetButtonDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BMGetButtonDetails soap_tmp___ns1__BMGetButtonDetails;
	ns1__BMGetButtonDetailsResponseType ns1__BMGetButtonDetailsResponse;
	ns1__BMGetButtonDetailsResponse.soap_default(soap);
	soap_default___ns1__BMGetButtonDetails(soap, &soap_tmp___ns1__BMGetButtonDetails);
	if (!soap_get___ns1__BMGetButtonDetails(soap, &soap_tmp___ns1__BMGetButtonDetails, "-ns1:BMGetButtonDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BMGetButtonDetails(soap_tmp___ns1__BMGetButtonDetails.ns1__BMGetButtonDetailsReq, ns1__BMGetButtonDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BMGetButtonDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BMGetButtonDetailsResponse.soap_put(soap, "ns1:BMGetButtonDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BMGetButtonDetailsResponse.soap_put(soap, "ns1:BMGetButtonDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BMGetInventory(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BMGetInventory soap_tmp___ns1__BMGetInventory;
	ns1__BMGetInventoryResponseType ns1__BMGetInventoryResponse;
	ns1__BMGetInventoryResponse.soap_default(soap);
	soap_default___ns1__BMGetInventory(soap, &soap_tmp___ns1__BMGetInventory);
	if (!soap_get___ns1__BMGetInventory(soap, &soap_tmp___ns1__BMGetInventory, "-ns1:BMGetInventory", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BMGetInventory(soap_tmp___ns1__BMGetInventory.ns1__BMGetInventoryReq, ns1__BMGetInventoryResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BMGetInventoryResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BMGetInventoryResponse.soap_put(soap, "ns1:BMGetInventoryResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BMGetInventoryResponse.soap_put(soap, "ns1:BMGetInventoryResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BMManageButtonStatus(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BMManageButtonStatus soap_tmp___ns1__BMManageButtonStatus;
	ns1__BMManageButtonStatusResponseType ns1__BMManageButtonStatusResponse;
	ns1__BMManageButtonStatusResponse.soap_default(soap);
	soap_default___ns1__BMManageButtonStatus(soap, &soap_tmp___ns1__BMManageButtonStatus);
	if (!soap_get___ns1__BMManageButtonStatus(soap, &soap_tmp___ns1__BMManageButtonStatus, "-ns1:BMManageButtonStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BMManageButtonStatus(soap_tmp___ns1__BMManageButtonStatus.ns1__BMManageButtonStatusReq, ns1__BMManageButtonStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BMManageButtonStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BMManageButtonStatusResponse.soap_put(soap, "ns1:BMManageButtonStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BMManageButtonStatusResponse.soap_put(soap, "ns1:BMManageButtonStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BMButtonSearch(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BMButtonSearch soap_tmp___ns1__BMButtonSearch;
	ns1__BMButtonSearchResponseType ns1__BMButtonSearchResponse;
	ns1__BMButtonSearchResponse.soap_default(soap);
	soap_default___ns1__BMButtonSearch(soap, &soap_tmp___ns1__BMButtonSearch);
	if (!soap_get___ns1__BMButtonSearch(soap, &soap_tmp___ns1__BMButtonSearch, "-ns1:BMButtonSearch", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BMButtonSearch(soap_tmp___ns1__BMButtonSearch.ns1__BMButtonSearchReq, ns1__BMButtonSearchResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BMButtonSearchResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BMButtonSearchResponse.soap_put(soap, "ns1:BMButtonSearchResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BMButtonSearchResponse.soap_put(soap, "ns1:BMButtonSearchResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BillUser(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BillUser soap_tmp___ns1__BillUser;
	ns1__BillUserResponseType ns1__BillUserResponse;
	ns1__BillUserResponse.soap_default(soap);
	soap_default___ns1__BillUser(soap, &soap_tmp___ns1__BillUser);
	if (!soap_get___ns1__BillUser(soap, &soap_tmp___ns1__BillUser, "-ns1:BillUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BillUser(soap_tmp___ns1__BillUser.ns1__BillUserReq, ns1__BillUserResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BillUserResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BillUserResponse.soap_put(soap, "ns1:BillUserResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BillUserResponse.soap_put(soap, "ns1:BillUserResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__TransactionSearch(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__TransactionSearch soap_tmp___ns1__TransactionSearch;
	ns1__TransactionSearchResponseType ns1__TransactionSearchResponse;
	ns1__TransactionSearchResponse.soap_default(soap);
	soap_default___ns1__TransactionSearch(soap, &soap_tmp___ns1__TransactionSearch);
	if (!soap_get___ns1__TransactionSearch(soap, &soap_tmp___ns1__TransactionSearch, "-ns1:TransactionSearch", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->TransactionSearch(soap_tmp___ns1__TransactionSearch.ns1__TransactionSearchReq, ns1__TransactionSearchResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__TransactionSearchResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__TransactionSearchResponse.soap_put(soap, "ns1:TransactionSearchResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__TransactionSearchResponse.soap_put(soap, "ns1:TransactionSearchResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__MassPay(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__MassPay soap_tmp___ns1__MassPay;
	ns1__MassPayResponseType ns1__MassPayResponse;
	ns1__MassPayResponse.soap_default(soap);
	soap_default___ns1__MassPay(soap, &soap_tmp___ns1__MassPay);
	if (!soap_get___ns1__MassPay(soap, &soap_tmp___ns1__MassPay, "-ns1:MassPay", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->MassPay(soap_tmp___ns1__MassPay.ns1__MassPayReq, ns1__MassPayResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__MassPayResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__MassPayResponse.soap_put(soap, "ns1:MassPayResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__MassPayResponse.soap_put(soap, "ns1:MassPayResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BillAgreementUpdate(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BillAgreementUpdate soap_tmp___ns1__BillAgreementUpdate;
	ns1__BAUpdateResponseType ns1__BAUpdateResponse;
	ns1__BAUpdateResponse.soap_default(soap);
	soap_default___ns1__BillAgreementUpdate(soap, &soap_tmp___ns1__BillAgreementUpdate);
	if (!soap_get___ns1__BillAgreementUpdate(soap, &soap_tmp___ns1__BillAgreementUpdate, "-ns1:BillAgreementUpdate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BillAgreementUpdate(soap_tmp___ns1__BillAgreementUpdate.ns1__BillAgreementUpdateReq, ns1__BAUpdateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BAUpdateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BAUpdateResponse.soap_put(soap, "ns1:BAUpdateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BAUpdateResponse.soap_put(soap, "ns1:BAUpdateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__AddressVerify(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__AddressVerify soap_tmp___ns1__AddressVerify;
	ns1__AddressVerifyResponseType ns1__AddressVerifyResponse;
	ns1__AddressVerifyResponse.soap_default(soap);
	soap_default___ns1__AddressVerify(soap, &soap_tmp___ns1__AddressVerify);
	if (!soap_get___ns1__AddressVerify(soap, &soap_tmp___ns1__AddressVerify, "-ns1:AddressVerify", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddressVerify(soap_tmp___ns1__AddressVerify.ns1__AddressVerifyReq, ns1__AddressVerifyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__AddressVerifyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__AddressVerifyResponse.soap_put(soap, "ns1:AddressVerifyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__AddressVerifyResponse.soap_put(soap, "ns1:AddressVerifyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__EnterBoarding(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__EnterBoarding soap_tmp___ns1__EnterBoarding;
	ns1__EnterBoardingResponseType ns1__EnterBoardingResponse;
	ns1__EnterBoardingResponse.soap_default(soap);
	soap_default___ns1__EnterBoarding(soap, &soap_tmp___ns1__EnterBoarding);
	if (!soap_get___ns1__EnterBoarding(soap, &soap_tmp___ns1__EnterBoarding, "-ns1:EnterBoarding", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->EnterBoarding(soap_tmp___ns1__EnterBoarding.ns1__EnterBoardingReq, ns1__EnterBoardingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__EnterBoardingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__EnterBoardingResponse.soap_put(soap, "ns1:EnterBoardingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__EnterBoardingResponse.soap_put(soap, "ns1:EnterBoardingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetBoardingDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetBoardingDetails soap_tmp___ns1__GetBoardingDetails;
	ns1__GetBoardingDetailsResponseType ns1__GetBoardingDetailsResponse;
	ns1__GetBoardingDetailsResponse.soap_default(soap);
	soap_default___ns1__GetBoardingDetails(soap, &soap_tmp___ns1__GetBoardingDetails);
	if (!soap_get___ns1__GetBoardingDetails(soap, &soap_tmp___ns1__GetBoardingDetails, "-ns1:GetBoardingDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetBoardingDetails(soap_tmp___ns1__GetBoardingDetails.ns1__GetBoardingDetailsReq, ns1__GetBoardingDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetBoardingDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetBoardingDetailsResponse.soap_put(soap, "ns1:GetBoardingDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetBoardingDetailsResponse.soap_put(soap, "ns1:GetBoardingDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CreateMobilePayment(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__CreateMobilePayment soap_tmp___ns1__CreateMobilePayment;
	ns1__CreateMobilePaymentResponseType ns1__CreateMobilePaymentResponse;
	ns1__CreateMobilePaymentResponse.soap_default(soap);
	soap_default___ns1__CreateMobilePayment(soap, &soap_tmp___ns1__CreateMobilePayment);
	if (!soap_get___ns1__CreateMobilePayment(soap, &soap_tmp___ns1__CreateMobilePayment, "-ns1:CreateMobilePayment", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateMobilePayment(soap_tmp___ns1__CreateMobilePayment.ns1__CreateMobilePaymentReq, ns1__CreateMobilePaymentResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CreateMobilePaymentResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CreateMobilePaymentResponse.soap_put(soap, "ns1:CreateMobilePaymentResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CreateMobilePaymentResponse.soap_put(soap, "ns1:CreateMobilePaymentResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetMobileStatus(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetMobileStatus soap_tmp___ns1__GetMobileStatus;
	ns1__GetMobileStatusResponseType ns1__GetMobileStatusResponse;
	ns1__GetMobileStatusResponse.soap_default(soap);
	soap_default___ns1__GetMobileStatus(soap, &soap_tmp___ns1__GetMobileStatus);
	if (!soap_get___ns1__GetMobileStatus(soap, &soap_tmp___ns1__GetMobileStatus, "-ns1:GetMobileStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMobileStatus(soap_tmp___ns1__GetMobileStatus.ns1__GetMobileStatusReq, ns1__GetMobileStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetMobileStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetMobileStatusResponse.soap_put(soap, "ns1:GetMobileStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetMobileStatusResponse.soap_put(soap, "ns1:GetMobileStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__SetMobileCheckout(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__SetMobileCheckout soap_tmp___ns1__SetMobileCheckout;
	ns1__SetMobileCheckoutResponseType ns1__SetMobileCheckoutResponse;
	ns1__SetMobileCheckoutResponse.soap_default(soap);
	soap_default___ns1__SetMobileCheckout(soap, &soap_tmp___ns1__SetMobileCheckout);
	if (!soap_get___ns1__SetMobileCheckout(soap, &soap_tmp___ns1__SetMobileCheckout, "-ns1:SetMobileCheckout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetMobileCheckout(soap_tmp___ns1__SetMobileCheckout.ns1__SetMobileCheckoutReq, ns1__SetMobileCheckoutResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__SetMobileCheckoutResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__SetMobileCheckoutResponse.soap_put(soap, "ns1:SetMobileCheckoutResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__SetMobileCheckoutResponse.soap_put(soap, "ns1:SetMobileCheckoutResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoMobileCheckoutPayment(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoMobileCheckoutPayment soap_tmp___ns1__DoMobileCheckoutPayment;
	ns1__DoMobileCheckoutPaymentResponseType ns1__DoMobileCheckoutPaymentResponse;
	ns1__DoMobileCheckoutPaymentResponse.soap_default(soap);
	soap_default___ns1__DoMobileCheckoutPayment(soap, &soap_tmp___ns1__DoMobileCheckoutPayment);
	if (!soap_get___ns1__DoMobileCheckoutPayment(soap, &soap_tmp___ns1__DoMobileCheckoutPayment, "-ns1:DoMobileCheckoutPayment", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoMobileCheckoutPayment(soap_tmp___ns1__DoMobileCheckoutPayment.ns1__DoMobileCheckoutPaymentReq, ns1__DoMobileCheckoutPaymentResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoMobileCheckoutPaymentResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoMobileCheckoutPaymentResponse.soap_put(soap, "ns1:DoMobileCheckoutPaymentResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoMobileCheckoutPaymentResponse.soap_put(soap, "ns1:DoMobileCheckoutPaymentResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetBalance(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetBalance soap_tmp___ns1__GetBalance;
	ns1__GetBalanceResponseType ns1__GetBalanceResponse;
	ns1__GetBalanceResponse.soap_default(soap);
	soap_default___ns1__GetBalance(soap, &soap_tmp___ns1__GetBalance);
	if (!soap_get___ns1__GetBalance(soap, &soap_tmp___ns1__GetBalance, "-ns1:GetBalance", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetBalance(soap_tmp___ns1__GetBalance.ns1__GetBalanceReq, ns1__GetBalanceResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetBalanceResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetBalanceResponse.soap_put(soap, "ns1:GetBalanceResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetBalanceResponse.soap_put(soap, "ns1:GetBalanceResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetPalDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetPalDetails soap_tmp___ns1__GetPalDetails;
	ns1__GetPalDetailsResponseType ns1__GetPalDetailsResponse;
	ns1__GetPalDetailsResponse.soap_default(soap);
	soap_default___ns1__GetPalDetails(soap, &soap_tmp___ns1__GetPalDetails);
	if (!soap_get___ns1__GetPalDetails(soap, &soap_tmp___ns1__GetPalDetails, "-ns1:GetPalDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPalDetails(soap_tmp___ns1__GetPalDetails.ns1__GetPalDetailsReq, ns1__GetPalDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetPalDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetPalDetailsResponse.soap_put(soap, "ns1:GetPalDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetPalDetailsResponse.soap_put(soap, "ns1:GetPalDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoExpressCheckoutPayment(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoExpressCheckoutPayment soap_tmp___ns1__DoExpressCheckoutPayment;
	ns1__DoExpressCheckoutPaymentResponseType ns1__DoExpressCheckoutPaymentResponse;
	ns1__DoExpressCheckoutPaymentResponse.soap_default(soap);
	soap_default___ns1__DoExpressCheckoutPayment(soap, &soap_tmp___ns1__DoExpressCheckoutPayment);
	if (!soap_get___ns1__DoExpressCheckoutPayment(soap, &soap_tmp___ns1__DoExpressCheckoutPayment, "-ns1:DoExpressCheckoutPayment", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoExpressCheckoutPayment(soap_tmp___ns1__DoExpressCheckoutPayment.ns1__DoExpressCheckoutPaymentReq, ns1__DoExpressCheckoutPaymentResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoExpressCheckoutPaymentResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoExpressCheckoutPaymentResponse.soap_put(soap, "ns1:DoExpressCheckoutPaymentResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoExpressCheckoutPaymentResponse.soap_put(soap, "ns1:DoExpressCheckoutPaymentResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoUATPExpressCheckoutPayment(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoUATPExpressCheckoutPayment soap_tmp___ns1__DoUATPExpressCheckoutPayment;
	ns1__DoUATPExpressCheckoutPaymentResponseType ns1__DoUATPExpressCheckoutPaymentResponse;
	ns1__DoUATPExpressCheckoutPaymentResponse.soap_default(soap);
	soap_default___ns1__DoUATPExpressCheckoutPayment(soap, &soap_tmp___ns1__DoUATPExpressCheckoutPayment);
	if (!soap_get___ns1__DoUATPExpressCheckoutPayment(soap, &soap_tmp___ns1__DoUATPExpressCheckoutPayment, "-ns1:DoUATPExpressCheckoutPayment", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoUATPExpressCheckoutPayment(soap_tmp___ns1__DoUATPExpressCheckoutPayment.ns1__DoUATPExpressCheckoutPaymentReq, ns1__DoUATPExpressCheckoutPaymentResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoUATPExpressCheckoutPaymentResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoUATPExpressCheckoutPaymentResponse.soap_put(soap, "ns1:DoUATPExpressCheckoutPaymentResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoUATPExpressCheckoutPaymentResponse.soap_put(soap, "ns1:DoUATPExpressCheckoutPaymentResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__SetAuthFlowParam(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__SetAuthFlowParam soap_tmp___ns1__SetAuthFlowParam;
	ns1__SetAuthFlowParamResponseType ns1__SetAuthFlowParamResponse;
	ns1__SetAuthFlowParamResponse.soap_default(soap);
	soap_default___ns1__SetAuthFlowParam(soap, &soap_tmp___ns1__SetAuthFlowParam);
	if (!soap_get___ns1__SetAuthFlowParam(soap, &soap_tmp___ns1__SetAuthFlowParam, "-ns1:SetAuthFlowParam", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAuthFlowParam(soap_tmp___ns1__SetAuthFlowParam.ns1__SetAuthFlowParamReq, ns1__SetAuthFlowParamResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__SetAuthFlowParamResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__SetAuthFlowParamResponse.soap_put(soap, "ns1:SetAuthFlowParamResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__SetAuthFlowParamResponse.soap_put(soap, "ns1:SetAuthFlowParamResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetAuthDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetAuthDetails soap_tmp___ns1__GetAuthDetails;
	ns1__GetAuthDetailsResponseType ns1__GetAuthDetailsResponse;
	ns1__GetAuthDetailsResponse.soap_default(soap);
	soap_default___ns1__GetAuthDetails(soap, &soap_tmp___ns1__GetAuthDetails);
	if (!soap_get___ns1__GetAuthDetails(soap, &soap_tmp___ns1__GetAuthDetails, "-ns1:GetAuthDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAuthDetails(soap_tmp___ns1__GetAuthDetails.ns1__GetAuthDetailsReq, ns1__GetAuthDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetAuthDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetAuthDetailsResponse.soap_put(soap, "ns1:GetAuthDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetAuthDetailsResponse.soap_put(soap, "ns1:GetAuthDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__SetAccessPermissions(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__SetAccessPermissions soap_tmp___ns1__SetAccessPermissions;
	ns1__SetAccessPermissionsResponseType ns1__SetAccessPermissionsResponse;
	ns1__SetAccessPermissionsResponse.soap_default(soap);
	soap_default___ns1__SetAccessPermissions(soap, &soap_tmp___ns1__SetAccessPermissions);
	if (!soap_get___ns1__SetAccessPermissions(soap, &soap_tmp___ns1__SetAccessPermissions, "-ns1:SetAccessPermissions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAccessPermissions(soap_tmp___ns1__SetAccessPermissions.ns1__SetAccessPermissionsReq, ns1__SetAccessPermissionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__SetAccessPermissionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__SetAccessPermissionsResponse.soap_put(soap, "ns1:SetAccessPermissionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__SetAccessPermissionsResponse.soap_put(soap, "ns1:SetAccessPermissionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__UpdateAccessPermissions(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__UpdateAccessPermissions soap_tmp___ns1__UpdateAccessPermissions;
	ns1__UpdateAccessPermissionsResponseType ns1__UpdateAccessPermissionsResponse;
	ns1__UpdateAccessPermissionsResponse.soap_default(soap);
	soap_default___ns1__UpdateAccessPermissions(soap, &soap_tmp___ns1__UpdateAccessPermissions);
	if (!soap_get___ns1__UpdateAccessPermissions(soap, &soap_tmp___ns1__UpdateAccessPermissions, "-ns1:UpdateAccessPermissions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UpdateAccessPermissions(soap_tmp___ns1__UpdateAccessPermissions.ns1__UpdateAccessPermissionsReq, ns1__UpdateAccessPermissionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__UpdateAccessPermissionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__UpdateAccessPermissionsResponse.soap_put(soap, "ns1:UpdateAccessPermissionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__UpdateAccessPermissionsResponse.soap_put(soap, "ns1:UpdateAccessPermissionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetAccessPermissionDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetAccessPermissionDetails soap_tmp___ns1__GetAccessPermissionDetails;
	ns1__GetAccessPermissionDetailsResponseType ns1__GetAccessPermissionDetailsResponse;
	ns1__GetAccessPermissionDetailsResponse.soap_default(soap);
	soap_default___ns1__GetAccessPermissionDetails(soap, &soap_tmp___ns1__GetAccessPermissionDetails);
	if (!soap_get___ns1__GetAccessPermissionDetails(soap, &soap_tmp___ns1__GetAccessPermissionDetails, "-ns1:GetAccessPermissionDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAccessPermissionDetails(soap_tmp___ns1__GetAccessPermissionDetails.ns1__GetAccessPermissionDetailsReq, ns1__GetAccessPermissionDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetAccessPermissionDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetAccessPermissionDetailsResponse.soap_put(soap, "ns1:GetAccessPermissionDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetAccessPermissionDetailsResponse.soap_put(soap, "ns1:GetAccessPermissionDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetIncentiveEvaluation(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetIncentiveEvaluation soap_tmp___ns1__GetIncentiveEvaluation;
	ns1__GetIncentiveEvaluationResponseType ns1__GetIncentiveEvaluationResponse;
	ns1__GetIncentiveEvaluationResponse.soap_default(soap);
	soap_default___ns1__GetIncentiveEvaluation(soap, &soap_tmp___ns1__GetIncentiveEvaluation);
	if (!soap_get___ns1__GetIncentiveEvaluation(soap, &soap_tmp___ns1__GetIncentiveEvaluation, "-ns1:GetIncentiveEvaluation", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetIncentiveEvaluation(soap_tmp___ns1__GetIncentiveEvaluation.ns1__GetIncentiveEvaluationReq, ns1__GetIncentiveEvaluationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetIncentiveEvaluationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetIncentiveEvaluationResponse.soap_put(soap, "ns1:GetIncentiveEvaluationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetIncentiveEvaluationResponse.soap_put(soap, "ns1:GetIncentiveEvaluationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__SetExpressCheckout(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__SetExpressCheckout soap_tmp___ns1__SetExpressCheckout;
	ns1__SetExpressCheckoutResponseType ns1__SetExpressCheckoutResponse;
	ns1__SetExpressCheckoutResponse.soap_default(soap);
	soap_default___ns1__SetExpressCheckout(soap, &soap_tmp___ns1__SetExpressCheckout);
	if (!soap_get___ns1__SetExpressCheckout(soap, &soap_tmp___ns1__SetExpressCheckout, "-ns1:SetExpressCheckout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetExpressCheckout(soap_tmp___ns1__SetExpressCheckout.ns1__SetExpressCheckoutReq, ns1__SetExpressCheckoutResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__SetExpressCheckoutResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__SetExpressCheckoutResponse.soap_put(soap, "ns1:SetExpressCheckoutResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__SetExpressCheckoutResponse.soap_put(soap, "ns1:SetExpressCheckoutResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__ExecuteCheckoutOperations(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__ExecuteCheckoutOperations soap_tmp___ns1__ExecuteCheckoutOperations;
	ns1__ExecuteCheckoutOperationsResponseType ns1__ExecuteCheckoutOperationsResponse;
	ns1__ExecuteCheckoutOperationsResponse.soap_default(soap);
	soap_default___ns1__ExecuteCheckoutOperations(soap, &soap_tmp___ns1__ExecuteCheckoutOperations);
	if (!soap_get___ns1__ExecuteCheckoutOperations(soap, &soap_tmp___ns1__ExecuteCheckoutOperations, "-ns1:ExecuteCheckoutOperations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->ExecuteCheckoutOperations(soap_tmp___ns1__ExecuteCheckoutOperations.ns1__ExecuteCheckoutOperationsReq, ns1__ExecuteCheckoutOperationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ExecuteCheckoutOperationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ExecuteCheckoutOperationsResponse.soap_put(soap, "ns1:ExecuteCheckoutOperationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ExecuteCheckoutOperationsResponse.soap_put(soap, "ns1:ExecuteCheckoutOperationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetExpressCheckoutDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetExpressCheckoutDetails soap_tmp___ns1__GetExpressCheckoutDetails;
	ns1__GetExpressCheckoutDetailsResponseType ns1__GetExpressCheckoutDetailsResponse;
	ns1__GetExpressCheckoutDetailsResponse.soap_default(soap);
	soap_default___ns1__GetExpressCheckoutDetails(soap, &soap_tmp___ns1__GetExpressCheckoutDetails);
	if (!soap_get___ns1__GetExpressCheckoutDetails(soap, &soap_tmp___ns1__GetExpressCheckoutDetails, "-ns1:GetExpressCheckoutDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetExpressCheckoutDetails(soap_tmp___ns1__GetExpressCheckoutDetails.ns1__GetExpressCheckoutDetailsReq, ns1__GetExpressCheckoutDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetExpressCheckoutDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetExpressCheckoutDetailsResponse.soap_put(soap, "ns1:GetExpressCheckoutDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetExpressCheckoutDetailsResponse.soap_put(soap, "ns1:GetExpressCheckoutDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoDirectPayment(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoDirectPayment soap_tmp___ns1__DoDirectPayment;
	ns1__DoDirectPaymentResponseType ns1__DoDirectPaymentResponse;
	ns1__DoDirectPaymentResponse.soap_default(soap);
	soap_default___ns1__DoDirectPayment(soap, &soap_tmp___ns1__DoDirectPayment);
	if (!soap_get___ns1__DoDirectPayment(soap, &soap_tmp___ns1__DoDirectPayment, "-ns1:DoDirectPayment", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoDirectPayment(soap_tmp___ns1__DoDirectPayment.ns1__DoDirectPaymentReq, ns1__DoDirectPaymentResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoDirectPaymentResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoDirectPaymentResponse.soap_put(soap, "ns1:DoDirectPaymentResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoDirectPaymentResponse.soap_put(soap, "ns1:DoDirectPaymentResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__ManagePendingTransactionStatus(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__ManagePendingTransactionStatus soap_tmp___ns1__ManagePendingTransactionStatus;
	ns1__ManagePendingTransactionStatusResponseType ns1__ManagePendingTransactionStatusResponse;
	ns1__ManagePendingTransactionStatusResponse.soap_default(soap);
	soap_default___ns1__ManagePendingTransactionStatus(soap, &soap_tmp___ns1__ManagePendingTransactionStatus);
	if (!soap_get___ns1__ManagePendingTransactionStatus(soap, &soap_tmp___ns1__ManagePendingTransactionStatus, "-ns1:ManagePendingTransactionStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->ManagePendingTransactionStatus(soap_tmp___ns1__ManagePendingTransactionStatus.ns1__ManagePendingTransactionStatusReq, ns1__ManagePendingTransactionStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ManagePendingTransactionStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ManagePendingTransactionStatusResponse.soap_put(soap, "ns1:ManagePendingTransactionStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ManagePendingTransactionStatusResponse.soap_put(soap, "ns1:ManagePendingTransactionStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoCancel(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoCancel soap_tmp___ns1__DoCancel;
	ns1__DoCancelResponseType ns1__DoCancelResponse;
	ns1__DoCancelResponse.soap_default(soap);
	soap_default___ns1__DoCancel(soap, &soap_tmp___ns1__DoCancel);
	if (!soap_get___ns1__DoCancel(soap, &soap_tmp___ns1__DoCancel, "-ns1:DoCancel", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoCancel(soap_tmp___ns1__DoCancel.ns1__DoCancelReq, ns1__DoCancelResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoCancelResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoCancelResponse.soap_put(soap, "ns1:DoCancelResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoCancelResponse.soap_put(soap, "ns1:DoCancelResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoCapture(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoCapture soap_tmp___ns1__DoCapture;
	ns1__DoCaptureResponseType ns1__DoCaptureResponse;
	ns1__DoCaptureResponse.soap_default(soap);
	soap_default___ns1__DoCapture(soap, &soap_tmp___ns1__DoCapture);
	if (!soap_get___ns1__DoCapture(soap, &soap_tmp___ns1__DoCapture, "-ns1:DoCapture", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoCapture(soap_tmp___ns1__DoCapture.ns1__DoCaptureReq, ns1__DoCaptureResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoCaptureResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoCaptureResponse.soap_put(soap, "ns1:DoCaptureResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoCaptureResponse.soap_put(soap, "ns1:DoCaptureResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoReauthorization(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoReauthorization soap_tmp___ns1__DoReauthorization;
	ns1__DoReauthorizationResponseType ns1__DoReauthorizationResponse;
	ns1__DoReauthorizationResponse.soap_default(soap);
	soap_default___ns1__DoReauthorization(soap, &soap_tmp___ns1__DoReauthorization);
	if (!soap_get___ns1__DoReauthorization(soap, &soap_tmp___ns1__DoReauthorization, "-ns1:DoReauthorization", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoReauthorization(soap_tmp___ns1__DoReauthorization.ns1__DoReauthorizationReq, ns1__DoReauthorizationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoReauthorizationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoReauthorizationResponse.soap_put(soap, "ns1:DoReauthorizationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoReauthorizationResponse.soap_put(soap, "ns1:DoReauthorizationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoVoid(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoVoid soap_tmp___ns1__DoVoid;
	ns1__DoVoidResponseType ns1__DoVoidResponse;
	ns1__DoVoidResponse.soap_default(soap);
	soap_default___ns1__DoVoid(soap, &soap_tmp___ns1__DoVoid);
	if (!soap_get___ns1__DoVoid(soap, &soap_tmp___ns1__DoVoid, "-ns1:DoVoid", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoVoid(soap_tmp___ns1__DoVoid.ns1__DoVoidReq, ns1__DoVoidResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoVoidResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoVoidResponse.soap_put(soap, "ns1:DoVoidResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoVoidResponse.soap_put(soap, "ns1:DoVoidResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoAuthorization(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoAuthorization soap_tmp___ns1__DoAuthorization;
	ns1__DoAuthorizationResponseType ns1__DoAuthorizationResponse;
	ns1__DoAuthorizationResponse.soap_default(soap);
	soap_default___ns1__DoAuthorization(soap, &soap_tmp___ns1__DoAuthorization);
	if (!soap_get___ns1__DoAuthorization(soap, &soap_tmp___ns1__DoAuthorization, "-ns1:DoAuthorization", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoAuthorization(soap_tmp___ns1__DoAuthorization.ns1__DoAuthorizationReq, ns1__DoAuthorizationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoAuthorizationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoAuthorizationResponse.soap_put(soap, "ns1:DoAuthorizationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoAuthorizationResponse.soap_put(soap, "ns1:DoAuthorizationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__UpdateAuthorization(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__UpdateAuthorization soap_tmp___ns1__UpdateAuthorization;
	ns1__UpdateAuthorizationResponseType ns1__UpdateAuthorizationResponse;
	ns1__UpdateAuthorizationResponse.soap_default(soap);
	soap_default___ns1__UpdateAuthorization(soap, &soap_tmp___ns1__UpdateAuthorization);
	if (!soap_get___ns1__UpdateAuthorization(soap, &soap_tmp___ns1__UpdateAuthorization, "-ns1:UpdateAuthorization", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UpdateAuthorization(soap_tmp___ns1__UpdateAuthorization.ns1__UpdateAuthorizationReq, ns1__UpdateAuthorizationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__UpdateAuthorizationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__UpdateAuthorizationResponse.soap_put(soap, "ns1:UpdateAuthorizationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__UpdateAuthorizationResponse.soap_put(soap, "ns1:UpdateAuthorizationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoUATPAuthorization(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoUATPAuthorization soap_tmp___ns1__DoUATPAuthorization;
	ns1__DoUATPAuthorizationResponseType ns1__DoUATPAuthorizationResponse;
	ns1__DoUATPAuthorizationResponse.soap_default(soap);
	soap_default___ns1__DoUATPAuthorization(soap, &soap_tmp___ns1__DoUATPAuthorization);
	if (!soap_get___ns1__DoUATPAuthorization(soap, &soap_tmp___ns1__DoUATPAuthorization, "-ns1:DoUATPAuthorization", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoUATPAuthorization(soap_tmp___ns1__DoUATPAuthorization.ns1__DoUATPAuthorizationReq, ns1__DoUATPAuthorizationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoUATPAuthorizationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoUATPAuthorizationResponse.soap_put(soap, "ns1:DoUATPAuthorizationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoUATPAuthorizationResponse.soap_put(soap, "ns1:DoUATPAuthorizationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__SetCustomerBillingAgreement(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__SetCustomerBillingAgreement soap_tmp___ns1__SetCustomerBillingAgreement;
	ns1__SetCustomerBillingAgreementResponseType ns1__SetCustomerBillingAgreementResponse;
	ns1__SetCustomerBillingAgreementResponse.soap_default(soap);
	soap_default___ns1__SetCustomerBillingAgreement(soap, &soap_tmp___ns1__SetCustomerBillingAgreement);
	if (!soap_get___ns1__SetCustomerBillingAgreement(soap, &soap_tmp___ns1__SetCustomerBillingAgreement, "-ns1:SetCustomerBillingAgreement", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetCustomerBillingAgreement(soap_tmp___ns1__SetCustomerBillingAgreement.ns1__SetCustomerBillingAgreementReq, ns1__SetCustomerBillingAgreementResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__SetCustomerBillingAgreementResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__SetCustomerBillingAgreementResponse.soap_put(soap, "ns1:SetCustomerBillingAgreementResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__SetCustomerBillingAgreementResponse.soap_put(soap, "ns1:SetCustomerBillingAgreementResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetBillingAgreementCustomerDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetBillingAgreementCustomerDetails soap_tmp___ns1__GetBillingAgreementCustomerDetails;
	ns1__GetBillingAgreementCustomerDetailsResponseType ns1__GetBillingAgreementCustomerDetailsResponse;
	ns1__GetBillingAgreementCustomerDetailsResponse.soap_default(soap);
	soap_default___ns1__GetBillingAgreementCustomerDetails(soap, &soap_tmp___ns1__GetBillingAgreementCustomerDetails);
	if (!soap_get___ns1__GetBillingAgreementCustomerDetails(soap, &soap_tmp___ns1__GetBillingAgreementCustomerDetails, "-ns1:GetBillingAgreementCustomerDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetBillingAgreementCustomerDetails(soap_tmp___ns1__GetBillingAgreementCustomerDetails.ns1__GetBillingAgreementCustomerDetailsReq, ns1__GetBillingAgreementCustomerDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetBillingAgreementCustomerDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetBillingAgreementCustomerDetailsResponse.soap_put(soap, "ns1:GetBillingAgreementCustomerDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetBillingAgreementCustomerDetailsResponse.soap_put(soap, "ns1:GetBillingAgreementCustomerDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CreateBillingAgreement(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__CreateBillingAgreement soap_tmp___ns1__CreateBillingAgreement;
	ns1__CreateBillingAgreementResponseType ns1__CreateBillingAgreementResponse;
	ns1__CreateBillingAgreementResponse.soap_default(soap);
	soap_default___ns1__CreateBillingAgreement(soap, &soap_tmp___ns1__CreateBillingAgreement);
	if (!soap_get___ns1__CreateBillingAgreement(soap, &soap_tmp___ns1__CreateBillingAgreement, "-ns1:CreateBillingAgreement", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateBillingAgreement(soap_tmp___ns1__CreateBillingAgreement.ns1__CreateBillingAgreementReq, ns1__CreateBillingAgreementResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CreateBillingAgreementResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CreateBillingAgreementResponse.soap_put(soap, "ns1:CreateBillingAgreementResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CreateBillingAgreementResponse.soap_put(soap, "ns1:CreateBillingAgreementResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoReferenceTransaction(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoReferenceTransaction soap_tmp___ns1__DoReferenceTransaction;
	ns1__DoReferenceTransactionResponseType ns1__DoReferenceTransactionResponse;
	ns1__DoReferenceTransactionResponse.soap_default(soap);
	soap_default___ns1__DoReferenceTransaction(soap, &soap_tmp___ns1__DoReferenceTransaction);
	if (!soap_get___ns1__DoReferenceTransaction(soap, &soap_tmp___ns1__DoReferenceTransaction, "-ns1:DoReferenceTransaction", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoReferenceTransaction(soap_tmp___ns1__DoReferenceTransaction.ns1__DoReferenceTransactionReq, ns1__DoReferenceTransactionResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoReferenceTransactionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoReferenceTransactionResponse.soap_put(soap, "ns1:DoReferenceTransactionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoReferenceTransactionResponse.soap_put(soap, "ns1:DoReferenceTransactionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CreateRecurringPaymentsProfile(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__CreateRecurringPaymentsProfile soap_tmp___ns1__CreateRecurringPaymentsProfile;
	ns1__CreateRecurringPaymentsProfileResponseType ns1__CreateRecurringPaymentsProfileResponse;
	ns1__CreateRecurringPaymentsProfileResponse.soap_default(soap);
	soap_default___ns1__CreateRecurringPaymentsProfile(soap, &soap_tmp___ns1__CreateRecurringPaymentsProfile);
	if (!soap_get___ns1__CreateRecurringPaymentsProfile(soap, &soap_tmp___ns1__CreateRecurringPaymentsProfile, "-ns1:CreateRecurringPaymentsProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateRecurringPaymentsProfile(soap_tmp___ns1__CreateRecurringPaymentsProfile.ns1__CreateRecurringPaymentsProfileReq, ns1__CreateRecurringPaymentsProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CreateRecurringPaymentsProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CreateRecurringPaymentsProfileResponse.soap_put(soap, "ns1:CreateRecurringPaymentsProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CreateRecurringPaymentsProfileResponse.soap_put(soap, "ns1:CreateRecurringPaymentsProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetRecurringPaymentsProfileDetails(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__GetRecurringPaymentsProfileDetails soap_tmp___ns1__GetRecurringPaymentsProfileDetails;
	ns1__GetRecurringPaymentsProfileDetailsResponseType ns1__GetRecurringPaymentsProfileDetailsResponse;
	ns1__GetRecurringPaymentsProfileDetailsResponse.soap_default(soap);
	soap_default___ns1__GetRecurringPaymentsProfileDetails(soap, &soap_tmp___ns1__GetRecurringPaymentsProfileDetails);
	if (!soap_get___ns1__GetRecurringPaymentsProfileDetails(soap, &soap_tmp___ns1__GetRecurringPaymentsProfileDetails, "-ns1:GetRecurringPaymentsProfileDetails", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetRecurringPaymentsProfileDetails(soap_tmp___ns1__GetRecurringPaymentsProfileDetails.ns1__GetRecurringPaymentsProfileDetailsReq, ns1__GetRecurringPaymentsProfileDetailsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetRecurringPaymentsProfileDetailsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetRecurringPaymentsProfileDetailsResponse.soap_put(soap, "ns1:GetRecurringPaymentsProfileDetailsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetRecurringPaymentsProfileDetailsResponse.soap_put(soap, "ns1:GetRecurringPaymentsProfileDetailsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__ManageRecurringPaymentsProfileStatus(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__ManageRecurringPaymentsProfileStatus soap_tmp___ns1__ManageRecurringPaymentsProfileStatus;
	ns1__ManageRecurringPaymentsProfileStatusResponseType ns1__ManageRecurringPaymentsProfileStatusResponse;
	ns1__ManageRecurringPaymentsProfileStatusResponse.soap_default(soap);
	soap_default___ns1__ManageRecurringPaymentsProfileStatus(soap, &soap_tmp___ns1__ManageRecurringPaymentsProfileStatus);
	if (!soap_get___ns1__ManageRecurringPaymentsProfileStatus(soap, &soap_tmp___ns1__ManageRecurringPaymentsProfileStatus, "-ns1:ManageRecurringPaymentsProfileStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->ManageRecurringPaymentsProfileStatus(soap_tmp___ns1__ManageRecurringPaymentsProfileStatus.ns1__ManageRecurringPaymentsProfileStatusReq, ns1__ManageRecurringPaymentsProfileStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ManageRecurringPaymentsProfileStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ManageRecurringPaymentsProfileStatusResponse.soap_put(soap, "ns1:ManageRecurringPaymentsProfileStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ManageRecurringPaymentsProfileStatusResponse.soap_put(soap, "ns1:ManageRecurringPaymentsProfileStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BillOutstandingAmount(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__BillOutstandingAmount soap_tmp___ns1__BillOutstandingAmount;
	ns1__BillOutstandingAmountResponseType ns1__BillOutstandingAmountResponse;
	ns1__BillOutstandingAmountResponse.soap_default(soap);
	soap_default___ns1__BillOutstandingAmount(soap, &soap_tmp___ns1__BillOutstandingAmount);
	if (!soap_get___ns1__BillOutstandingAmount(soap, &soap_tmp___ns1__BillOutstandingAmount, "-ns1:BillOutstandingAmount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BillOutstandingAmount(soap_tmp___ns1__BillOutstandingAmount.ns1__BillOutstandingAmountReq, ns1__BillOutstandingAmountResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BillOutstandingAmountResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BillOutstandingAmountResponse.soap_put(soap, "ns1:BillOutstandingAmountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BillOutstandingAmountResponse.soap_put(soap, "ns1:BillOutstandingAmountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__UpdateRecurringPaymentsProfile(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__UpdateRecurringPaymentsProfile soap_tmp___ns1__UpdateRecurringPaymentsProfile;
	ns1__UpdateRecurringPaymentsProfileResponseType ns1__UpdateRecurringPaymentsProfileResponse;
	ns1__UpdateRecurringPaymentsProfileResponse.soap_default(soap);
	soap_default___ns1__UpdateRecurringPaymentsProfile(soap, &soap_tmp___ns1__UpdateRecurringPaymentsProfile);
	if (!soap_get___ns1__UpdateRecurringPaymentsProfile(soap, &soap_tmp___ns1__UpdateRecurringPaymentsProfile, "-ns1:UpdateRecurringPaymentsProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UpdateRecurringPaymentsProfile(soap_tmp___ns1__UpdateRecurringPaymentsProfile.ns1__UpdateRecurringPaymentsProfileReq, ns1__UpdateRecurringPaymentsProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__UpdateRecurringPaymentsProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__UpdateRecurringPaymentsProfileResponse.soap_put(soap, "ns1:UpdateRecurringPaymentsProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__UpdateRecurringPaymentsProfileResponse.soap_put(soap, "ns1:UpdateRecurringPaymentsProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DoNonReferencedCredit(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__DoNonReferencedCredit soap_tmp___ns1__DoNonReferencedCredit;
	ns1__DoNonReferencedCreditResponseType ns1__DoNonReferencedCreditResponse;
	ns1__DoNonReferencedCreditResponse.soap_default(soap);
	soap_default___ns1__DoNonReferencedCredit(soap, &soap_tmp___ns1__DoNonReferencedCredit);
	if (!soap_get___ns1__DoNonReferencedCredit(soap, &soap_tmp___ns1__DoNonReferencedCredit, "-ns1:DoNonReferencedCredit", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoNonReferencedCredit(soap_tmp___ns1__DoNonReferencedCredit.ns1__DoNonReferencedCreditReq, ns1__DoNonReferencedCreditResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DoNonReferencedCreditResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DoNonReferencedCreditResponse.soap_put(soap, "ns1:DoNonReferencedCreditResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DoNonReferencedCreditResponse.soap_put(soap, "ns1:DoNonReferencedCreditResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__ReverseTransaction(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__ReverseTransaction soap_tmp___ns1__ReverseTransaction;
	ns1__ReverseTransactionResponseType ns1__ReverseTransactionResponse;
	ns1__ReverseTransactionResponse.soap_default(soap);
	soap_default___ns1__ReverseTransaction(soap, &soap_tmp___ns1__ReverseTransaction);
	if (!soap_get___ns1__ReverseTransaction(soap, &soap_tmp___ns1__ReverseTransaction, "-ns1:ReverseTransaction", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->ReverseTransaction(soap_tmp___ns1__ReverseTransaction.ns1__ReverseTransactionReq, ns1__ReverseTransactionResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReverseTransactionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReverseTransactionResponse.soap_put(soap, "ns1:ReverseTransactionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReverseTransactionResponse.soap_put(soap, "ns1:ReverseTransactionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__ExternalRememberMeOptOut(struct soap *soap, PayPalAPISoapBindingService *service)
{	struct __ns1__ExternalRememberMeOptOut soap_tmp___ns1__ExternalRememberMeOptOut;
	ns1__ExternalRememberMeOptOutResponseType ns1__ExternalRememberMeOptOutResponse;
	ns1__ExternalRememberMeOptOutResponse.soap_default(soap);
	soap_default___ns1__ExternalRememberMeOptOut(soap, &soap_tmp___ns1__ExternalRememberMeOptOut);
	if (!soap_get___ns1__ExternalRememberMeOptOut(soap, &soap_tmp___ns1__ExternalRememberMeOptOut, "-ns1:ExternalRememberMeOptOut", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->ExternalRememberMeOptOut(soap_tmp___ns1__ExternalRememberMeOptOut.ns1__ExternalRememberMeOptOutReq, ns1__ExternalRememberMeOptOutResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ExternalRememberMeOptOutResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ExternalRememberMeOptOutResponse.soap_put(soap, "ns1:ExternalRememberMeOptOutResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ExternalRememberMeOptOutResponse.soap_put(soap, "ns1:ExternalRememberMeOptOutResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
